/*
 * Generated by the ICS builderXcessory (BX).
 *
 *
 * Builder Xcessory 4.0.
 *
 * Identification: 
 */
module main_uil
version = 'V1.0'
names = case_sensitive
!(BX) bx_info("java_flags", "-verbose")
!(BX) bx_info("java_unmanage_dialogs", "true")
!(BX) bx_info("java_html_all_class", "true")
!(BX) bx_info("java_applet_runnable", "false")
!(BX) bx_info("java_main_applet", "true")
!(BX) bx_info("java_constants", "Defs", true)
!(BX) bx_info("java_html", "MainApp", true)
!(BX) bx_info("java_main", "MainApp", true)
!(BX) bx_info("java_makefile", "makefile-java", true)
!(BX) bx_info("vk_libs", "-lvk -lvkhelp -L/usr/lib/Motif1.2 -lXm -lXt -lX11 -lPW")
!(BX) bx_info("vk_cflags", "-DFUNCPROTO -DXTFUNCPROTO -I/usr/include/Motif1.2 -I/usr/include/X11R5")
!(BX) bx_info("vk_cc", "CC")
!(BX) bx_info("vk_target", "main-vk")
!(BX) bx_info("vk_use_tooltalk", "false")
!(BX) bx_info("vk_use_runonce", "false")
!(BX) bx_info("vk_ignore_shell_geometry", "false")
!(BX) bx_info("vk_subclass_vk_components", "true")
!(BX) bx_info("vk_del_nested_classes", "false")
!(BX) bx_info("vk_rm_exp_callbacks", "false")
!(BX) bx_info("vk_unmanage_dialogs", "true")
!(BX) bx_info("vk_name", "BuilderProduct")
!(BX) bx_info("vk_class", "BuilderProduct")
!(BX) bx_info("vk_hdrext", "h")
!(BX) bx_info("vk_srcext", "C")
!(BX) bx_info("vk_app_defaults", "app-defaults", true)
!(BX) bx_info("vk_callbacks", "callbacks-vk", true)
!(BX) bx_info("vk_utilities", "bxutils-vk", true)
!(BX) bx_info("vk_constants", "defs-vk", true)
!(BX) bx_info("vk_main", "main-vk", true)
!(BX) bx_info("vk_makefile", "makefile-vk", true)
!(BX) bx_info("vk_imakefile", "Imakefile", true)
!(BX) bx_info("c++_libs", "-L/usr/lib/Motif1.2 -lXm -lXt -lX11")
!(BX) bx_info("c++_cflags", "-DFUNCPROTO -DXTFUNCPROTO -I/usr/include/Motif1.2 -I/usr/include/X11R5")
!(BX) bx_info("c++_cc", "CC")
!(BX) bx_info("c++_target", "main-C")
!(BX) bx_info("c++_del_nested_classes", "false")
!(BX) bx_info("c++_ignore_shell_geometry", "false")
!(BX) bx_info("c++_visible_windows_only", "false")
!(BX) bx_info("c++_rm_exp_callbacks", "false")
!(BX) bx_info("c++_old_construct", "false")
!(BX) bx_info("c++_unmanage_dialogs", "true")
!(BX) bx_info("c++_gen_derived", "false")
!(BX) bx_info("c++_name", "BuilderProduct")
!(BX) bx_info("c++_class", "BuilderProduct")
!(BX) bx_info("c++_hdrext", "h")
!(BX) bx_info("c++_srcext", "C")
!(BX) bx_info("c++_app_defaults", "app-defaults", true)
!(BX) bx_info("c++_callbacks", "callbacks-C", false)
!(BX) bx_info("c++_utilities", "bxutil-C.C", false)
!(BX) bx_info("c++_constants", "defs-C", false)
!(BX) bx_info("c++_main", "main-C.C", false)
!(BX) bx_info("c++_baseclass", "UIComponent", false)
!(BX) bx_info("c++_makefile", "makefile-C", false)
!(BX) bx_info("c++_imakefile", "Imakefile", false)
!(BX) bx_info("c_libs", "-L/usr/lib/Motif1.2 -lXm -lXt -lX11")
!(BX) bx_info("c_cflags", "-I/usr/include/Motif1.2 -I/usr/include/X11R5")
!(BX) bx_info("c_cc", "cc")
!(BX) bx_info("c_target", "greta.c")
!(BX) bx_info("c_ignore_shell_geometry", "false")
!(BX) bx_info("c_visible_windows_only", "false")
!(BX) bx_info("c_rm_exp_callbacks", "false")
!(BX) bx_info("c_reverse_dialogs", "true")
!(BX) bx_info("c_dialogs_in_routine", "true")
!(BX) bx_info("c_unmanage_dialogs", "true")
!(BX) bx_info("c_name", "greta")
!(BX) bx_info("c_class", "GReta")
!(BX) bx_info("c_app_defaults", "GReta", true)
!(BX) bx_info("c_utilities", "bxutil-c.c", true)
!(BX) bx_info("c_constants", "greta_cstes.h", true)
!(BX) bx_info("c_callbacks", "greta_cb.c", true)
!(BX) bx_info("c_creation", "greta_creation.c", true)
!(BX) bx_info("c_main", "greta.c", true)
!(BX) bx_info("c_makefile", "makefile-c", false)
!(BX) bx_info("c_imakefile", "Imakefile", false)
!(BX) bx_info("uil_libs", "-L/usr/lib/Motif1.2 -lMrm -lXm -lXt -lX11")
!(BX) bx_info("uil_uilflags", "-w -I/usr/include/Motif1.2/uil")
!(BX) bx_info("uil_cflags", "-I/usr/include/Motif1.2 -I/usr/include/X11R5")
!(BX) bx_info("uil_cc", "cc")
!(BX) bx_info("uil_target", "main-uil")
!(BX) bx_info("uil_ignore_shell_geometry", "false")
!(BX) bx_info("uil_visible_windows_only", "false")
!(BX) bx_info("uil_name", "BuilderProduct")
!(BX) bx_info("uil_class", "BuilderProduct")
!(BX) bx_info("uil_app_defaults", "app_defaults", true)
!(BX) bx_info("uil_utilities", "bxutil-uil.c", false)
!(BX) bx_info("uil_constants", "main-uil.h", false)
!(BX) bx_info("uil_callbacks", "callbacks-uil.c", false)
!(BX) bx_info("uil_uil", "greta.uil", true)
!(BX) bx_info("uil_main", "main-uil.c", false)
!(BX) bx_info("uil_makefile", "makefile-uil", false)
!(BX) bx_info("uil_imakefile", "Imakefile", false)
!(BX) bx_info("include_path", "/tmp_mnt/users/g/simard/essai",
!(BX)		".",
!(BX)		"./src", false)
!(BX) bx_info("xrunner_command", "$(M_ROOT)/arch/X11.5/Xm1.2/mic_xm.o", false)
!(BX) bx_info("system_directory", "/usr/local/bx_4.0/builderXcessory")
!(BX) bx_info("builder_version", "Builder Xcessory 4.0")
!(BX) bx_info("build_lang", "C")
!(BX) bx_info("ansi", "false")
!(BX) bx_info("use_locales", "false")
!(BX) bx_info("new_mrm_style", "true")
!(BX) bx_info("c_wrap_lines", "false")
!(BX) bx_info("uil_wrap_lines", "true")
!(BX) bx_info("integrate_purify", "false")
!(BX) bx_info("purify_command", "purify")
!(BX) bx_info("integrate_xrunner", "false")

value
    A2psOptionsTextFID : exported 6;
    ClassListID : exported 3;
    CopiesNbTextFID : exported 5;
    DevDelNWResTBID : exported 19;
    DevDelOpFormID : exported 24;
    DevDelWResTBID : exported 17;
    DevFilterTFID : exported 10;
    DevSelFormID : exported 9;
    DevSelectionTFID : exported 11;
    DomainListID : exported 12;
    ErrorBoxID : exported 8;
    FamilyListID : exported 13;
    InfoBoxID :  2;
    LpOptionsTextFID : exported 7;
    MainTextID : exported 0;
    MemberListID : exported 14;
    PnameListID : exported 16;
    PrintFormID : exported 4;
    QuitMsgBoxID : exported 15;
    ResDomListID : exported 32;
    ResFamListID : exported 1;
    ResFilterTFID : exported 31;
    ResMembListID : exported 22;
    ResNameListID : exported 23;
    ResSelFormID : exported 30;
    ServDelNWResTBID : exported 20;
    ServDelOpFormID : exported 28;
    ServDelWResTBID : exported 18;
    ServFilterTFID : exported 26;
    ServSelFormID : exported 25;
    ServSelectionTFID : exported 27;
    ServUnregBoxID : exported 29;
    StdinoutTextID : exported 21;
    WidgetIDsNb : exported 50;
    servdisplay_classresID : exported 0;
    ServUpdateBoxID : exported 33;
    DevUpdateBoxID : exported 34;
    ResUpdateBoxID : exported 35;
    SaveFileSelBoxID :  36;
    LoadFileSelBoxID :  37;
    FileLoadFormID :  38;
    FileLoadTextID :  39;
    PasswdTextID :  40;
    servdisplay_embedded : exported 1;
    bool_opIDsNb : exported 4;
    devdisplay_dc : exported 2;
    devdisplay_hdb : exported 3;
    ServNameTextID :  41;
    PersNameTextID :  42;
    DevListTextID :  43;
    ServRestartBoxID :  44;
procedure BxManageCB(string);
procedure BxUnmanageCB(string);
procedure QuitCb();
procedure CreationCb(integer);
procedure OnVersionCb();
procedure DialogCb(integer);
procedure DismissCb(integer);
procedure PreparePrintCb(integer);
procedure PrintCb();
procedure UndoCb(integer);
procedure CutCb(integer);
procedure CopyCb(integer);
procedure PasteCb(integer);
procedure DeleteCb(integer);
procedure file_button_cb(integer);
procedure BoolOptionChangeCb(integer);
procedure DevClickCb(integer);
procedure DevFilterCb();
procedure DevSelOKCb();
procedure DevDismissCb(integer);
procedure PrepareDevDelCb(integer);
procedure DevDelOKCb();
procedure DevPreparePrintCb(integer);
procedure DevUndoCb(integer);
procedure DevCutCb(integer);
procedure DevCopyCb(integer);
procedure DevPasteCb(integer);
procedure DevDeleteCb(integer);
procedure ServClickCb(integer);
procedure ServSelOKCb();
procedure ServDismissCb(integer);
procedure ServUnregCb(integer);
procedure ServUnregOKCb();
procedure PrepareServDelCb(integer);
procedure ServDelOKCb();
procedure ServPreparePrintCb(integer);
procedure ServUndoCb(integer);
procedure ServCutCb(integer);
procedure ServCopyCb(integer);
procedure ServPasteCb(integer);
procedure ServDeleteCb(integer);
procedure ResClickCb(integer);
procedure ResFilterCb();
procedure ResSelOKCb();
procedure ResDismissCb(integer);
procedure ResPreparePrintCb(integer);
procedure ResUndoCb(integer);
procedure ResCutCb(integer);
procedure ResCopyCb(integer);
procedure ResPasteCb(integer);
procedure ResDeleteCb(integer);
procedure DbInfoCb();
procedure ServUpdateOKCb();
procedure DevUpdateOKCb();
procedure ResUpdateOKCb();
procedure ResSaveCb(integer);
procedure ResPrepareUpdateCb(integer);
procedure ServSaveCb(integer);
procedure ServPrepareUpdateCb(integer);
procedure DevSaveCb(integer);
procedure DevPrepareUpdateCb(integer);
procedure ccb_make_parent_def_button();
procedure ServFilterCb();
procedure DevSaveShowFileSelCb(integer);
procedure ResSaveShowFileSelCb(integer);
procedure ServSaveShowFileSelCb(integer);
procedure DevChainResCb(integer);
!(BX) event_handler ""
!(BX)procedure dev_reso_text_event_hand(integer);
procedure ServChainResCb(integer);
!(BX) event_handler ""
!(BX)procedure serv_reso_text_event_hand(integer);
procedure LoadFileCb();
procedure LoadUpdateCb();
!(BX) event_handler ""
!(BX)procedure passwd_entry_event_hand();
procedure PasswdOkCb();
procedure PasswdCancelCb();
procedure DevPingCb();
procedure DevRestartCb();
procedure ServRestartCb();
procedure NewServOKCb();
procedure NewServCancelCb();
procedure DevRestartSvcOK();

list BaseStyle : arguments {
};

list BaseStyleReasons : callbacks {
};

!(BX)list BaseStyleHandlers : handlers {
!(BX)};

list MainStyle : arguments {
        arguments BaseStyle;
!(BX)   _XmNbackground = color('Gray60');
!(BX)   _XmNfontList = font_table(
!(BX)		font('-*-helvetica-bold-r-*-*-*-180-75-75-*-*-iso8859-1'));
!(BX)   _XmNforeground = color('Black');
};

list MainStyleReasons : callbacks {
        callbacks BaseStyleReasons;
};

!(BX)list MainStyleHandlers : handlers {
!(BX)    handlers BaseStyleHandlers;
!(BX)};

list MenuStyle : arguments {
        arguments BaseStyle;
!(BX)   _XmNbackground = color('SeaGreen');
!(BX)   _XmNfontList = font_table(
!(BX)		font('-*-helvetica-bold-r-*-*-*-140-75-75-*-*-iso8859-1'));
!(BX)   _XmNforeground = color('White');
};

list MenuStyleReasons : callbacks {
        callbacks BaseStyleReasons;
};

!(BX)list MenuStyleHandlers : handlers {
!(BX)    handlers BaseStyleHandlers;
!(BX)};

list WorkStyle : arguments {
        arguments BaseStyle;
!(BX)   _XmNbackground = color('Gray60');
!(BX)   _XmNfontList = font_table(
!(BX)		font('-*-helvetica-bold-r-*-*-*-180-75-75-*-*-iso8859-1'));
!(BX)   _XmNforeground = color('Black');
};

list WorkStyleReasons : callbacks {
        callbacks BaseStyleReasons;
};

!(BX)list WorkStyleHandlers : handlers {
!(BX)    handlers BaseStyleHandlers;
!(BX)};

list CommandStyle : arguments {
        arguments BaseStyle;
!(BX)   _XmNbackground = color('Gray60');
!(BX)   _XmNfontList = font_table(
!(BX)		font('-*-times-bold-r-*-*-*-180-75-75-*-*-iso8859-1'));
!(BX)   _XmNforeground = color('Black');
};

list CommandStyleReasons : callbacks {
        callbacks BaseStyleReasons;
};

!(BX)list CommandStyleHandlers : handlers {
!(BX)    handlers BaseStyleHandlers;
!(BX)};

list MessageStyle : arguments {
        arguments BaseStyle;
!(BX)   _XmNbackground = color('Gray60');
!(BX)   _XmNfontList = font_table(
!(BX)		font('-*-times-bold-r-*-*-*-180-75-75-*-*-iso8859-1'));
!(BX)   _XmNforeground = color('Black');
};

list MessageStyleReasons : callbacks {
        callbacks BaseStyleReasons;
};

!(BX)list MessageStyleHandlers : handlers {
!(BX)    handlers BaseStyleHandlers;
!(BX)};

list ErrorStyle : arguments {
        arguments BaseStyle;
!(BX)   _XmNbackground = color('Gray60');
!(BX)   _XmNfontList = font_table(
!(BX)		font('-*-helvetica-bold-r-*-*-*-180-75-75-*-*-iso8859-1'));
!(BX)   _XmNforeground = color('Black');
};

list ErrorStyleReasons : callbacks {
        callbacks BaseStyleReasons;
};

!(BX)list ErrorStyleHandlers : handlers {
!(BX)    handlers BaseStyleHandlers;
!(BX)};

list WarningStyle : arguments {
        arguments BaseStyle;
!(BX)   _XmNbackground = color('Gray60');
!(BX)   _XmNfontList = font_table(
!(BX)		font('-*-helvetica-bold-r-*-*-*-180-75-75-*-*-iso8859-1'));
!(BX)   _XmNforeground = color('Black');
};

list WarningStyleReasons : callbacks {
        callbacks BaseStyleReasons;
};

!(BX)list WarningStyleHandlers : handlers {
!(BX)    handlers BaseStyleHandlers;
!(BX)};

list PromptStyle : arguments {
        arguments BaseStyle;
!(BX)   _XmNbackground = color('Gray60');
!(BX)   _XmNfontList = font_table(
!(BX)		font('-*-helvetica-bold-r-*-*-*-180-75-75-*-*-iso8859-1'));
!(BX)   _XmNforeground = color('Black');
};

list PromptStyleReasons : callbacks {
        callbacks BaseStyleReasons;
};

!(BX)list PromptStyleHandlers : handlers {
!(BX)    handlers BaseStyleHandlers;
!(BX)};

list greta_main_style : arguments {
        arguments BaseStyle;
!(BX)   _XmNbackground = color('Gray65');
!(BX)   _XmNfontList = font_table(
!(BX)		font('-*-helvetica-bold-r-*-*-*-160-75-75-*-*-iso8859-1'));
!(BX)   _XmNforeground = color('Black');
};

list greta_main_styleReasons : callbacks {
        callbacks BaseStyleReasons;
};

!(BX)list greta_main_styleHandlers : handlers {
!(BX)    handlers BaseStyleHandlers;
!(BX)};

list greta_menu_style : arguments {
        arguments BaseStyle;
!(BX)   _XmNbackground = rgb(6400, 33280, 19712);
!(BX)   _XmNfontList = font_table(
!(BX)		font('-*-helvetica-bold-r-*-*-*-140-75-75-*-*-iso8859-1'));
!(BX)   _XmNforeground = color('Black');
};

list greta_menu_styleReasons : callbacks {
        callbacks BaseStyleReasons;
};

!(BX)list greta_menu_styleHandlers : handlers {
!(BX)    handlers BaseStyleHandlers;
!(BX)};

list MyWorkStyle : arguments {
        arguments BaseStyle;
!(BX)   _XmNbackground = color('Gray90');
!(BX)   _XmNfontList = font_table(
!(BX)		font('-*-helvetica-bold-r-*-*-*-140-75-75-*-*-iso8859-1'));
!(BX)   _XmNforeground = color('Black');
};

list MyWorkStyleReasons : callbacks {
        callbacks BaseStyleReasons;
};

!(BX)list MyWorkStyleHandlers : handlers {
!(BX)    handlers BaseStyleHandlers;
!(BX)};

list MyWorkStyleNonEdit : arguments {
        arguments BaseStyle;
!(BX)   _XmNbackground = color('Grey75');
!(BX)   _XmNfontList = font_table(
!(BX)		font('-*-helvetica-bold-r-*-*-*-140-75-75-*-*-iso8859-1'));
!(BX)   _XmNforeground = color('Black');
};

list MyWorkStyleNonEditReasons : callbacks {
        callbacks BaseStyleReasons;
};

!(BX)list MyWorkStyleNonEditHandlers : handlers {
!(BX)    handlers BaseStyleHandlers;
!(BX)};

list MyCommandStyle : arguments {
        arguments BaseStyle;
!(BX)   _XmNbackground = rgb(37376, 39936, 48896);
!(BX)   _XmNforeground = color('Black');
};

list MyCommandStyleReasons : callbacks {
        callbacks BaseStyleReasons;
};

!(BX)list MyCommandStyleHandlers : handlers {
!(BX)    handlers BaseStyleHandlers;
!(BX)};

list MyInfoStyle : arguments {
        arguments BaseStyle;
!(BX)   _XmNbackground = rgb(6400, 33280, 19712);
        XmNdialogStyle = XmDIALOG_FULL_APPLICATION_MODAL;
!(BX)   _XmNdialogTitle = compound_string("Information");
        XmNdialogType = XmDIALOG_INFORMATION;
!(BX)   _XmNforeground = color('Black');
};

list MyInfoStyleReasons : callbacks {
        callbacks BaseStyleReasons;
};

!(BX)list MyInfoStyleHandlers : handlers {
!(BX)    handlers BaseStyleHandlers;
!(BX)};

list MyErrorStyle2 : arguments {
        arguments BaseStyle;
!(BX)   _XmNbackground = rgb(51200, 16640, 16640);
!(BX)   _XmNfontList = font_table(
!(BX)		font('-*-helvetica-bold-r-*-*-*-180-75-75-*-*-iso8859-1'));
!(BX)   _XmNforeground = color('Grey97');
};

list MyErrorStyle2Reasons : callbacks {
        callbacks BaseStyleReasons;
};

!(BX)list MyErrorStyle2Handlers : handlers {
!(BX)    handlers BaseStyleHandlers;
!(BX)};

list MyErrorStyle : arguments {
        arguments BaseStyle;
!(BX)   _XmNbackground = rgb(56320, 23040, 23040);
        XmNdialogStyle = XmDIALOG_FULL_APPLICATION_MODAL;
!(BX)   _XmNdialogTitle = compound_string(" Error");
        XmNdialogType = XmDIALOG_ERROR;
!(BX)   _XmNfontList = font_table(
!(BX)		font('-*-helvetica-bold-r-*-*-*-180-75-75-*-*-iso8859-1'));
!(BX)   _XmNforeground = color('Black');
};

list MyErrorStyleReasons : callbacks {
        callbacks BaseStyleReasons;
};

!(BX)list MyErrorStyleHandlers : handlers {
!(BX)    handlers BaseStyleHandlers;
!(BX)};

list MyPBStyle : arguments {
        arguments BaseStyle;
!(BX)   _XmNbackground = rgb(44800, 46848, 65280);
!(BX)   _XmNforeground = color('Black');
};

list MyPBStyleReasons : callbacks {
        callbacks BaseStyleReasons;
};

!(BX)list MyPBStyleHandlers : handlers {
!(BX)    handlers BaseStyleHandlers;
!(BX)};

list MyStdinoutStyle : arguments {
        arguments BaseStyle;
!(BX)   _XmNbackground = rgb(43520, 45568, 65280);
!(BX)   _XmNfontList = font_table(
!(BX)		font('-*-helvetica-bold-r-*-*-*-160-75-75-*-*-iso8859-1'));
!(BX)   _XmNforeground = color('Black');
};

list MyStdinoutStyleReasons : callbacks {
        callbacks BaseStyleReasons;
};

!(BX)list MyStdinoutStyleHandlers : handlers {
!(BX)    handlers BaseStyleHandlers;
!(BX)};

list greta_small_style : arguments {
        arguments BaseStyle;
!(BX)   _XmNbackground = color('Gray65');
!(BX)   _XmNfontList = font_table(
!(BX)		font('-*-helvetica-bold-r-*-*-*-140-75-75-*-*-iso8859-1'));
!(BX)   _XmNforeground = color('Black');
};

list greta_small_styleReasons : callbacks {
        callbacks BaseStyleReasons;
};

!(BX)list greta_small_styleHandlers : handlers {
!(BX)    handlers BaseStyleHandlers;
!(BX)};


!(BX)object topLevelShell : TopLevelShell widget {
!(BX)    arguments {
!(BX)        _XmNtitle = "greta";
!(BX)        _XmNiconName = "greta";
!(BX)        XmNx = 5862;
!(BX)        XmNy = 598;
!(BX)        XmNwidth = 642;
!(BX)        XmNheight = 404;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmMainWindow mainWindow;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object mainWindow : XmMainWindow widget {
    arguments {
        arguments greta_main_style;
        XmNmenuBar = XmMenuBar menuBar;
    };
    controls {
!(BX)         unmanaged XmDialogShell servRestartDialogShell;
!(BX)         unmanaged XmDialogShell newServDS;
!(BX)         unmanaged XmDialogShell passwdDs;
!(BX)         unmanaged XmDialogShell fileLoadFileSelDS;
!(BX)         unmanaged XmDialogShell fileLoadDialogShell;
!(BX)         unmanaged XmDialogShell saveAsFileSelDS;
!(BX)         unmanaged XmDialogShell servUpdateDS;
!(BX)         unmanaged XmDialogShell devUpdateDS;
!(BX)         unmanaged XmDialogShell resUpdateDS;
!(BX)         unmanaged XmDialogShell resDialogShell;
!(BX)         unmanaged XmDialogShell resSelDialogShell;
!(BX)         unmanaged XmDialogShell devSelDialogShell;
!(BX)         unmanaged XmDialogShell servUnregDialogShell;
!(BX)         unmanaged XmDialogShell servDelOptionDialogShell;
!(BX)         unmanaged XmDialogShell servDialogShell;
!(BX)         unmanaged XmDialogShell servSelDialogShell;
!(BX)         unmanaged XmDialogShell errorDialogShell;
!(BX)         unmanaged XmDialogShell devDialogShell;
!(BX)         unmanaged XmDialogShell devDelOptionDialogShell;
!(BX)         unmanaged XmDialogShell quitDialogShell;
!(BX)         unmanaged XmDialogShell printDialogShell;
!(BX)         unmanaged XmDialogShell infoDialogShell;
         managed XmMenuBar menuBar;
         managed XmForm mainForm;
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

!(BX)object servRestartDialogShell : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNwidth = 280;
!(BX)        XmNheight = 108;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmMessageDialog messageBox;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object messageBox : XmMessageDialog widget {
    arguments {
        arguments MyInfoStyle;
        XmNdialogTitle = compound_string("Restart");
        XmNdialogType = XmDIALOG_QUESTION;
        XmNmessageString = compound_string("Really restart device server ?");
        XmNokLabelString = compound_string("Yes");
        XmNx = 859;
        XmNy = 724;
        XmNwidth = 280;
        XmNheight = 108;
    };
    controls {
    };
    callbacks {
        callbacks MyInfoStyleReasons;
        MrmNcreateCallback = procedure CreationCb(ServRestartBoxID);
        XmNokCallback = procedure DevRestartSvcOK();
    };
!(BX)    handlers {
!(BX)        handlers MyInfoStyleHandlers;
!(BX)    };
};

!(BX)object newServDS : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNtitle = "New Server";
!(BX)        XmNwidth = 469;
!(BX)        XmNheight = 317;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmFormDialog newServForm;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object newServForm : XmFormDialog widget {
    arguments {
        arguments greta_small_style;
        XmNautoUnmanage = false;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNdialogStyle = XmDIALOG_FULL_APPLICATION_MODAL;
!(BX)   _XmNdialogTitle = compound_string("New Server");
        XmNx = 670;
        XmNy = 515;
        XmNwidth = 469;
        XmNheight = 317;
    };
    controls {
         managed XmScrolledWindow devListSW;
         managed XmLabel devListLabel;
         managed XmText persNameText;
         managed XmLabel persNameLabel;
         managed XmPushButton newServCancelPB;
         managed XmPushButton newServOkPB;
         managed XmSeparator newServSep;
         managed XmText servNameText;
         managed XmLabel servNameLabel;
    };
    callbacks {
        callbacks greta_small_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_small_styleHandlers;
!(BX)    };
};

object servNameLabel : XmLabel widget {
    arguments {
        arguments greta_small_style;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Server Name :");
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNtopOffset = 40;
        XmNleftOffset = 10;
        XmNx = 10;
        XmNy = 40;
        XmNwidth = 130;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks greta_small_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_small_styleHandlers;
!(BX)    };
};

object servNameText : XmText widget {
    arguments {
        arguments greta_small_style;
        XmNsensitive = true;
        XmNbackground = color('White Smoke');
        XmNeditable = true;
        XmNcursorPositionVisible = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftWidget = XmLabel servNameLabel;
        XmNtopOffset = 40;
        XmNleftOffset = 0;
        XmNrightOffset = 39;
        XmNx = 140;
        XmNy = 40;
        XmNwidth = 290;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks greta_small_styleReasons;
        MrmNcreateCallback = procedure CreationCb(ServNameTextID);
    };
!(BX)    handlers {
!(BX)        handlers greta_small_styleHandlers;
!(BX)    };
};

object newServSep : XmSeparator widget {
    arguments {
        arguments greta_small_style;
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNbottomWidget = XmPushButton newServCancelPB;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 6;
        XmNx = 5;
        XmNy = 239;
        XmNwidth = 458;
        XmNheight = 31;
    };
    controls {
    };
    callbacks {
        callbacks greta_small_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_small_styleHandlers;
!(BX)    };
};

object newServOkPB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
!(BX)   _XmNlabelString = compound_string("OK");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomOffset = 7;
        XmNleftOffset = 20;
        XmNx = 20;
        XmNy = 270;
        XmNwidth = 79;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
        MrmNcreateCallback = procedure ccb_make_parent_def_button();
        XmNactivateCallback = procedure NewServOKCb();
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

object newServCancelPB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
!(BX)   _XmNlabelString = compound_string("Cancel");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_FORM;
        XmNbottomOffset = 7;
        XmNrightOffset = 23;
        XmNx = 350;
        XmNy = 270;
        XmNwidth = 96;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
        XmNactivateCallback = procedure NewServCancelCb();
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

object persNameLabel : XmLabel widget {
    arguments {
        arguments greta_small_style;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Personal Name :");
        XmNleftAttachment = XmATTACH_FORM;
        XmNtopOffset = 90;
        XmNleftOffset = 10;
        XmNx = 10;
        XmNy = 90;
        XmNwidth = 120;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks greta_small_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_small_styleHandlers;
!(BX)    };
};

object persNameText : XmText widget {
    arguments {
        arguments greta_small_style;
        XmNsensitive = true;
        XmNbackground = color('White Smoke');
        XmNeditable = true;
        XmNcursorPositionVisible = false;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopOffset = 90;
        XmNleftOffset = 140;
        XmNrightOffset = 39;
        XmNx = 140;
        XmNy = 90;
        XmNwidth = 290;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks greta_small_styleReasons;
        MrmNcreateCallback = procedure CreationCb(PersNameTextID);
    };
!(BX)    handlers {
!(BX)        handlers greta_small_styleHandlers;
!(BX)    };
};

object devListLabel : XmLabel widget {
    arguments {
        arguments greta_small_style;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Device List :");
        XmNleftAttachment = XmATTACH_FORM;
        XmNtopOffset = 160;
        XmNleftOffset = 10;
        XmNx = 10;
        XmNy = 160;
        XmNwidth = 110;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks greta_small_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_small_styleHandlers;
!(BX)    };
};

object devListSW : XmScrolledWindow widget {
    arguments {
        arguments greta_small_style;
        XmNscrollingPolicy = XmAPPLICATION_DEFINED;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopOffset = 140;
        XmNleftOffset = 140;
        XmNrightOffset = 19;
        XmNx = 140;
        XmNy = 140;
        XmNwidth = 310;
        XmNheight = 99;
    };
    controls {
         managed XmText devListText;
    };
    callbacks {
        callbacks greta_small_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_small_styleHandlers;
!(BX)    };
};

object devListText : XmText widget {
    arguments {
        arguments greta_small_style;
        XmNbackground = color('White Smoke');
        XmNeditMode = XmMULTI_LINE_EDIT;
        XmNcolumns = 31;
    };
    controls {
    };
    callbacks {
        callbacks greta_small_styleReasons;
        MrmNcreateCallback = procedure CreationCb(DevListTextID);
    };
!(BX)    handlers {
!(BX)        handlers greta_small_styleHandlers;
!(BX)    };
};

!(BX)object passwdDs : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNwidth = 453;
!(BX)        XmNheight = 191;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmFormDialog passwdForm;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object passwdForm : XmFormDialog widget {
    arguments {
        arguments greta_main_style;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNdialogStyle = XmDIALOG_FULL_APPLICATION_MODAL;
!(BX)   _XmNdialogTitle = compound_string("Security  Password");
        XmNx = 686;
        XmNy = 641;
        XmNwidth = 453;
        XmNheight = 191;
    };
    controls {
         managed XmPushButton passwdCancelPB;
         managed XmPushButton passwdOkPB;
         managed XmSeparator passwdSep;
         managed XmText passwdText;
         managed XmLabel passwdLabel;
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object passwdLabel : XmLabel widget {
    arguments {
        arguments greta_main_style;
        XmNlabelString = compound_string("Password :");
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNtopOffset = 30;
        XmNleftOffset = 16;
        XmNx = 16;
        XmNy = 30;
        XmNwidth = 113;
        XmNheight = 48;
    };
    controls {
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object passwdText : XmText widget {
    arguments {
        arguments greta_main_style;
        XmNsensitive = true;
        XmNbackground = color('White Smoke');
        XmNeditable = false;
        XmNcursorPositionVisible = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_FORM;
        XmNbottomWidget = XmSeparator passwdSep;
        XmNleftWidget = XmLabel passwdLabel;
        XmNtopOffset = 31;
        XmNbottomOffset = 13;
        XmNleftOffset = 16;
        XmNrightOffset = 20;
        XmNx = 145;
        XmNy = 31;
        XmNwidth = 288;
        XmNheight = 47;
    };
    controls {
    };
    callbacks {
        callbacks greta_main_styleReasons;
        MrmNcreateCallback = procedure CreationCb(PasswdTextID);
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)        passwd_entry_event_hand(KeyPressMask, true);
!(BX)    };
};

object passwdSep : XmSeparator widget {
    arguments {
        arguments greta_main_style;
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNbottomWidget = XmPushButton passwdCancelPB;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 6;
        XmNx = 5;
        XmNy = 91;
        XmNwidth = 442;
        XmNheight = 31;
    };
    controls {
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object passwdOkPB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
!(BX)   _XmNlabelString = compound_string("OK");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomOffset = 29;
        XmNleftOffset = 18;
        XmNx = 18;
        XmNy = 122;
        XmNwidth = 79;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
        MrmNcreateCallback = procedure ccb_make_parent_def_button();
        XmNactivateCallback = procedure PasswdOkCb();
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

object passwdCancelPB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
!(BX)   _XmNlabelString = compound_string("Cancel");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_FORM;
        XmNbottomOffset = 29;
        XmNrightOffset = 19;
        XmNx = 338;
        XmNy = 122;
        XmNwidth = 96;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
        XmNactivateCallback = procedure PasswdCancelCb();
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

!(BX)object fileLoadFileSelDS : XmDialogShell widget {
!(BX)    arguments {
!(BX)        arguments MyCommandStyle;
!(BX)        XmNwidth = 443;
!(BX)        XmNheight = 456;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmFileSelectionDialog fileLoadFileSelectionBox;
!(BX)    };
!(BX)    callbacks {
!(BX)        callbacks MyCommandStyleReasons;
!(BX)    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
!(BX)};

object fileLoadFileSelectionBox : XmFileSelectionDialog widget {
    arguments {
        arguments MyCommandStyle;
        XmNautoUnmanage = true;
        XmNdialogStyle = XmDIALOG_FULL_APPLICATION_MODAL;
!(BX)   _XmNdialogTitle = compound_string("Load  :  resource  file");
!(BX)   _XmNokLabelString = compound_string("Load");
!(BX)   _XmNpattern = compound_string("*.res");
        XmNx = 696;
        XmNy = 376;
        XmNwidth = 443;
        XmNheight = 456;
    };
    controls {
        Xm_Items managed {
            arguments {
                arguments MyCommandStyle;
            };
            callbacks {
                    callbacks MyCommandStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyCommandStyleHandlers;
!(BX)            };
        };
        Xm_ItemsList managed {
            arguments {
                arguments MyCommandStyle;
            };
            callbacks {
                    callbacks MyCommandStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyCommandStyleHandlers;
!(BX)            };
        };
        Xm_Selection managed {
            arguments {
                arguments MyCommandStyle;
            };
            callbacks {
                    callbacks MyCommandStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyCommandStyleHandlers;
!(BX)            };
        };
        Xm_Text managed {
            arguments {
                arguments MyCommandStyle;
            };
            callbacks {
                    callbacks MyCommandStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyCommandStyleHandlers;
!(BX)            };
        };
        Xm_Separator managed {
            arguments {
                arguments MyCommandStyle;
            };
            callbacks {
                    callbacks MyCommandStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyCommandStyleHandlers;
!(BX)            };
        };
        Xm_OK managed {
            arguments {
                arguments MyCommandStyle;
            };
            callbacks {
                    callbacks MyCommandStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyCommandStyleHandlers;
!(BX)            };
        };
        Xm_Cancel managed {
            arguments {
                arguments MyCommandStyle;
            };
            callbacks {
                    callbacks MyCommandStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyCommandStyleHandlers;
!(BX)            };
        };
        Xm_Help unmanaged {
            arguments {
                arguments MyCommandStyle;
            };
            callbacks {
                    callbacks MyCommandStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyCommandStyleHandlers;
!(BX)            };
        };
        Xm_FilterLabel managed {
            arguments {
                arguments MyCommandStyle;
            };
            callbacks {
                    callbacks MyCommandStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyCommandStyleHandlers;
!(BX)            };
        };
        Xm_FilterText managed {
            arguments {
                arguments MyCommandStyle;
            };
            callbacks {
                    callbacks MyCommandStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyCommandStyleHandlers;
!(BX)            };
        };
        Xm_DirList managed {
            arguments {
                arguments MyCommandStyle;
            };
            callbacks {
                    callbacks MyCommandStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyCommandStyleHandlers;
!(BX)            };
        };
        Xm_Dir managed {
            arguments {
                arguments MyCommandStyle;
            };
            callbacks {
                    callbacks MyCommandStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyCommandStyleHandlers;
!(BX)            };
        };
        Xm_Apply managed {
            arguments {
                arguments MyCommandStyle;
            };
            callbacks {
                    callbacks MyCommandStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyCommandStyleHandlers;
!(BX)            };
        };
    };
    callbacks {
        callbacks MyCommandStyleReasons;
        MrmNcreateCallback = procedure CreationCb(LoadFileSelBoxID);
        XmNokCallback = procedure LoadFileCb();
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

!(BX)object fileLoadDialogShell : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNmwmFunctions = 33;
!(BX)        XmNwidth = 650;
!(BX)        XmNheight = 625;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmFormDialog fileLoadForm;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object fileLoadForm : XmFormDialog widget {
    arguments {
        arguments greta_main_style;
        XmNautoUnmanage = false;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 489;
        XmNy = 207;
        XmNwidth = 650;
        XmNheight = 625;
    };
    controls {
         managed XmPushButton fileLoadCancelPB;
         managed XmPushButton fileLoadUpdatePB;
         managed XmSeparator fileLoadSep;
         managed XmScrolledWindow fileLoadSW;
    };
    callbacks {
        callbacks greta_main_styleReasons;
        MrmNcreateCallback = procedure CreationCb(FileLoadFormID);
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object fileLoadSW : XmScrolledWindow widget {
    arguments {
        arguments greta_main_style;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNbottomWidget = XmSeparator fileLoadSep;
        XmNtopOffset = 5;
        XmNbottomOffset = 13;
        XmNleftOffset = 10;
        XmNrightOffset = 10;
        XmNx = 10;
        XmNy = 5;
        XmNwidth = 630;
        XmNheight = 529;
    };
    controls {
         managed XmText fileLoadText;
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object fileLoadText : XmText widget {
    arguments {
        arguments MyWorkStyleNonEdit;
        XmNeditMode = XmMULTI_LINE_EDIT;
        XmNeditable = false;
    };
    controls {
    };
    callbacks {
        callbacks MyWorkStyleNonEditReasons;
        MrmNcreateCallback = procedure CreationCb(FileLoadTextID);
    };
!(BX)    handlers {
!(BX)        handlers MyWorkStyleNonEditHandlers;
!(BX)    };
};

object fileLoadSep : XmSeparator widget {
    arguments {
        arguments greta_main_style;
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNbottomWidget = XmPushButton fileLoadUpdatePB;
        XmNbottomOffset = 8;
        XmNleftOffset = 6;
        XmNrightOffset = 14;
        XmNx = 6;
        XmNy = 547;
        XmNwidth = 630;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object fileLoadUpdatePB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
!(BX)   _XmNlabelString = compound_string("Update Data Base");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNbottomOffset = 14;
        XmNleftOffset = 8;
        XmNx = 8;
        XmNy = 575;
        XmNwidth = 177;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
        MrmNcreateCallback = procedure ccb_make_parent_def_button();
        XmNactivateCallback = procedure LoadUpdateCb();
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

object fileLoadCancelPB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
!(BX)   _XmNlabelString = compound_string("Cancel");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_FORM;
        XmNbottomOffset = 14;
        XmNrightOffset = 19;
        XmNx = 539;
        XmNy = 575;
        XmNwidth = 92;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
        XmNactivateCallback = procedure BxUnmanageCB("fileLoadForm");
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

!(BX)object saveAsFileSelDS : XmDialogShell widget {
!(BX)    arguments {
!(BX)        arguments MyCommandStyle;
!(BX)        XmNwidth = 358;
!(BX)        XmNheight = 456;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmFileSelectionDialog saveAsFileSelectionBox;
!(BX)    };
!(BX)    callbacks {
!(BX)        callbacks MyCommandStyleReasons;
!(BX)    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
!(BX)};

object saveAsFileSelectionBox : XmFileSelectionDialog widget {
    arguments {
        arguments MyCommandStyle;
        XmNautoUnmanage = true;
        XmNdialogStyle = XmDIALOG_FULL_APPLICATION_MODAL;
!(BX)   _XmNokLabelString = compound_string("Save");
        XmNx = 781;
        XmNy = 376;
        XmNwidth = 358;
        XmNheight = 456;
    };
    controls {
        Xm_Items managed {
            arguments {
                arguments MyCommandStyle;
            };
            callbacks {
                    callbacks MyCommandStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyCommandStyleHandlers;
!(BX)            };
        };
        Xm_ItemsList managed {
            arguments {
                arguments MyCommandStyle;
            };
            callbacks {
                    callbacks MyCommandStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyCommandStyleHandlers;
!(BX)            };
        };
        Xm_Selection managed {
            arguments {
                arguments MyCommandStyle;
            };
            callbacks {
                    callbacks MyCommandStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyCommandStyleHandlers;
!(BX)            };
        };
        Xm_Text managed {
            arguments {
                arguments MyCommandStyle;
            };
            callbacks {
                    callbacks MyCommandStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyCommandStyleHandlers;
!(BX)            };
        };
        Xm_Separator managed {
            arguments {
                arguments MyCommandStyle;
            };
            callbacks {
                    callbacks MyCommandStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyCommandStyleHandlers;
!(BX)            };
        };
        Xm_OK managed {
            arguments {
                arguments MyCommandStyle;
            };
            callbacks {
                    callbacks MyCommandStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyCommandStyleHandlers;
!(BX)            };
        };
        Xm_Cancel managed {
            arguments {
                arguments MyCommandStyle;
            };
            callbacks {
                    callbacks MyCommandStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyCommandStyleHandlers;
!(BX)            };
        };
        Xm_Help unmanaged {
            arguments {
                arguments MyCommandStyle;
            };
            callbacks {
                    callbacks MyCommandStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyCommandStyleHandlers;
!(BX)            };
        };
        Xm_FilterLabel managed {
            arguments {
                arguments MyCommandStyle;
            };
            callbacks {
                    callbacks MyCommandStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyCommandStyleHandlers;
!(BX)            };
        };
        Xm_FilterText managed {
            arguments {
                arguments MyCommandStyle;
            };
            callbacks {
                    callbacks MyCommandStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyCommandStyleHandlers;
!(BX)            };
        };
        Xm_DirList managed {
            arguments {
                arguments MyCommandStyle;
            };
            callbacks {
                    callbacks MyCommandStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyCommandStyleHandlers;
!(BX)            };
        };
        Xm_Dir managed {
            arguments {
                arguments MyCommandStyle;
            };
            callbacks {
                    callbacks MyCommandStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyCommandStyleHandlers;
!(BX)            };
        };
        Xm_Apply managed {
            arguments {
                arguments MyCommandStyle;
            };
            callbacks {
                    callbacks MyCommandStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyCommandStyleHandlers;
!(BX)            };
        };
    };
    callbacks {
        callbacks MyCommandStyleReasons;
        MrmNcreateCallback = procedure CreationCb(SaveFileSelBoxID);
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

!(BX)object servUpdateDS : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNwidth = 223;
!(BX)        XmNheight = 108;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmMessageDialog servUpdateMsgBox;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object servUpdateMsgBox : XmMessageDialog widget {
    arguments {
        arguments MyInfoStyle;
!(BX)   _XmNdialogTitle = compound_string("Update");
        XmNdialogType = XmDIALOG_QUESTION;
!(BX)   _XmNmessageString = compound_string("  Really update the server ?");
!(BX)   _XmNokLabelString = compound_string("Yes");
    };
    controls {
    };
    callbacks {
        callbacks MyInfoStyleReasons;
        MrmNcreateCallback = procedure CreationCb(ServUpdateBoxID);
        XmNokCallback = procedure ServUpdateOKCb();
    };
!(BX)    handlers {
!(BX)        handlers MyInfoStyleHandlers;
!(BX)    };
};

!(BX)object devUpdateDS : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNwidth = 221;
!(BX)        XmNheight = 108;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmMessageDialog devUpdateMsgBox;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object devUpdateMsgBox : XmMessageDialog widget {
    arguments {
        arguments MyInfoStyle;
!(BX)   _XmNdialogTitle = compound_string("Update");
        XmNdialogType = XmDIALOG_QUESTION;
!(BX)   _XmNmessageString = compound_string("  Really update the device ?");
!(BX)   _XmNokLabelString = compound_string("Yes");
    };
    controls {
    };
    callbacks {
        callbacks MyInfoStyleReasons;
        MrmNcreateCallback = procedure CreationCb(DevUpdateBoxID);
        XmNokCallback = procedure DevUpdateOKCb();
    };
!(BX)    handlers {
!(BX)        handlers MyInfoStyleHandlers;
!(BX)    };
};

!(BX)object resUpdateDS : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNwidth = 271;
!(BX)        XmNheight = 108;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmMessageDialog resUpdateMsgBox;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object resUpdateMsgBox : XmMessageDialog widget {
    arguments {
        arguments MyInfoStyle;
!(BX)   _XmNdialogTitle = compound_string("Update");
        XmNdialogType = XmDIALOG_QUESTION;
!(BX)   _XmNmessageString = compound_string("  Really update the resources po" &
!(BX) "ol ?");
!(BX)   _XmNokLabelString = compound_string("Yes");
    };
    controls {
    };
    callbacks {
        callbacks MyInfoStyleReasons;
        MrmNcreateCallback = procedure CreationCb(ResUpdateBoxID);
        XmNokCallback = procedure ResUpdateOKCb();
    };
!(BX)    handlers {
!(BX)        handlers MyInfoStyleHandlers;
!(BX)    };
};

!(BX)object resDialogShell : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNmwmFunctions = 33;
!(BX)        XmNwidth = 612;
!(BX)        XmNheight = 468;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmFormDialog resForm;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object resForm : XmFormDialog widget {
    arguments {
        arguments greta_main_style;
        XmNautoUnmanage = false;
    };
    controls {
         managed XmForm resTextForm;
         managed XmPushButton resUpdatePB;
         managed XmPushButton resCancelPB;
         managed XmMenuBar resMenuBar;
         managed XmSeparator resSep;
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object resSep : XmSeparator widget {
    arguments {
        arguments greta_main_style;
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNbottomOffset = 40;
        XmNleftOffset = 1;
        XmNrightOffset = 1;
        XmNx = 1;
        XmNy = 408;
        XmNwidth = 610;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object resMenuBar : XmMenuBar widget {
    arguments {
        arguments greta_menu_style;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 612;
        XmNheight = 32;
    };
    controls {
         managed XmCascadeButton fileCascadeButton3;
         managed XmCascadeButton editCascadeButton3;
    };
    callbacks {
        callbacks greta_menu_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object fileCascadeButton3 : XmCascadeButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("File");
!(BX)   _XmNmnemonic = keysym("F");
        XmNx = 5;
        XmNy = 5;
        XmNwidth = 39;
        XmNheight = 22;
    };
    controls {
         unmanaged XmPulldownMenu filePulldownMenu3;
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        MrmNcreateCallback = procedure file_button_cb(0);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object filePulldownMenu3 : XmPulldownMenu widget {
    arguments {
        arguments greta_menu_style;
    };
    controls {
         managed XmPushButton resPrintPB;
         managed XmPushButton resSavePB;
         managed XmPushButton resSaveAsPB;
         managed XmPushButton resDismissPB;
    };
    callbacks {
        callbacks greta_menu_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object resPrintPB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Print ...");
!(BX)   _XmNmnemonic = keysym("P");
!(BX)   _XmNaccelerator = "Ctrl<Key>p";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+P");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
       XmNactivateCallback = procedures {
                 ResPreparePrintCb(1);
                 DialogCb(PrintFormID);
        };
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object resSavePB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
        XmNsensitive = false;
!(BX)   _XmNlabelString = compound_string("Save");
!(BX)   _XmNmnemonic = keysym("S");
!(BX)   _XmNaccelerator = "Ctrl<Key>s";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+S");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure ResSaveCb(1);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object resSaveAsPB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Save As ...");
!(BX)   _XmNmnemonic = keysym("S");
!(BX)   _XmNaccelerator = "Ctrl<Key>a";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+A");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure ResSaveShowFileSelCb(1);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object resDismissPB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Dismiss");
!(BX)   _XmNmnemonic = keysym("D");
!(BX)   _XmNaccelerator = "Ctrl<Key>d";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+D");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure ResDismissCb(1);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object editCascadeButton3 : XmCascadeButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Edit");
!(BX)   _XmNmnemonic = keysym("E");
        XmNx = 44;
        XmNy = 5;
        XmNwidth = 41;
        XmNheight = 22;
    };
    controls {
         unmanaged XmPulldownMenu editPulldownMenu3;
    };
    callbacks {
        callbacks greta_menu_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object editPulldownMenu3 : XmPulldownMenu widget {
    arguments {
        arguments greta_menu_style;
    };
    controls {
         managed XmPushButton resUndoPB;
         managed XmPushButton resCutPB;
         managed XmPushButton resCopyPB;
         managed XmPushButton resPastePB;
         managed XmPushButton resTextDeletePB;
    };
    callbacks {
        callbacks greta_menu_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object resUndoPB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Undo");
!(BX)   _XmNmnemonic = keysym("U");
!(BX)   _XmNaccelerator = "Ctrl<Key>z";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+Z");
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure ResUndoCb(1);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object resCutPB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Cut");
!(BX)   _XmNmnemonic = keysym("t");
!(BX)   _XmNaccelerator = "<Key>Del";
!(BX)   _XmNacceleratorText = compound_string("Del");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure ResCutCb(1);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object resCopyPB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Copy");
!(BX)   _XmNmnemonic = keysym("C");
!(BX)   _XmNaccelerator = "Ctrl<Key>c";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+C");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure ResCopyCb(1);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object resPastePB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Paste");
!(BX)   _XmNmnemonic = keysym("P");
!(BX)   _XmNaccelerator = "Ctrl<Key>v";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+V");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure ResPasteCb(1);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object resTextDeletePB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Delete");
!(BX)   _XmNmnemonic = keysym("D");
!(BX)   _XmNaccelerator = "Ctrl<Key>x";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+X");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure ResDeleteCb(1);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object resCancelPB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
!(BX)   _XmNlabelString = compound_string("Cancel");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftPosition = 65;
        XmNbottomOffset = 1;
        XmNrightOffset = 0;
        XmNx = 398;
        XmNy = 431;
        XmNwidth = 72;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
        XmNactivateCallback = procedure ResDismissCb(1);
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

object resUpdatePB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
!(BX)   _XmNlabelString = compound_string("Update");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_POSITION;
        XmNrightPosition = 35;
        XmNbottomOffset = 1;
        XmNrightOffset = 0;
        XmNx = 142;
        XmNy = 431;
        XmNwidth = 72;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
        MrmNcreateCallback = procedure ccb_make_parent_def_button();
       XmNactivateCallback = procedures {
                 ResPrepareUpdateCb(1);
                 DialogCb(ResUpdateBoxID);
        };
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

object resTextForm : XmForm widget {
    arguments {
        arguments greta_main_style;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopOffset = 40;
        XmNbottomOffset = 56;
        XmNleftOffset = 1;
        XmNrightOffset = 1;
        XmNx = 1;
        XmNy = 40;
        XmNwidth = 610;
        XmNheight = 372;
    };
    controls {
         managed XmScrolledWindow resSW;
         managed XmLabel resLb;
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object resLb : XmLabel widget {
    arguments {
        arguments greta_main_style;
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("  Resources :");
        XmNtopOffset = 0;
        XmNleftOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 120;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object resSW : XmScrolledWindow widget {
    arguments {
        arguments greta_main_style;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopOffset = 30;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 5;
        XmNx = 5;
        XmNy = 30;
        XmNwidth = 600;
        XmNheight = 342;
    };
    controls {
         managed XmText resText;
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object resText : XmText widget {
    arguments {
        arguments MyWorkStyle;
        XmNeditMode = XmMULTI_LINE_EDIT;
    };
    controls {
    };
    callbacks {
        callbacks MyWorkStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyWorkStyleHandlers;
!(BX)    };
};

!(BX)object resSelDialogShell : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNwidth = 768;
!(BX)        XmNheight = 366;
!(BX)    };
!(BX)    controls {
!(BX)         unmanaged XmFormDialog resSelForm;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object resSelForm : XmFormDialog widget {
    arguments {
        arguments MyCommandStyle;
        XmNautoUnmanage = false;
!(BX)   _XmNdialogTitle = compound_string("Selection of some resources");
    };
    controls {
         managed XmPushButton resSelCancelPB;
         managed XmPushButton resSelFilterPB;
         managed XmPushButton resSelOKPB;
         managed XmLabel resSelCenterLb;
         managed XmSeparator resSelSep;
         managed XmLabel resFilterLb;
         managed XmForm resListsForm;
         managed XmTextField resFilterTF;
    };
    callbacks {
        callbacks MyCommandStyleReasons;
        MrmNcreateCallback = procedure CreationCb(ResSelFormID);
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object resFilterTF : XmTextField widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopWidget = XmLabel resFilterLb;
        XmNtopOffset = 0;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNrightOffset = 10;
        XmNx = 10;
        XmNy = 36;
        XmNwidth = 748;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
        MrmNcreateCallback = procedure CreationCb(ResFilterTFID);
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object resListsForm : XmForm widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopWidget = XmTextField resFilterTF;
        XmNbottomWidget = XmSeparator resSelSep;
        XmNtopOffset = 10;
        XmNbottomOffset = 5;
        XmNleftOffset = 1;
        XmNrightOffset = 1;
        XmNx = 1;
        XmNy = 86;
        XmNwidth = 766;
        XmNheight = 208;
    };
    controls {
         managed XmForm resNameForm;
         managed XmForm resFamForm;
         managed XmForm resDomForm;
         managed XmForm resMembForm;
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object resMembForm : XmForm widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmForm resFamForm;
        XmNtopOffset = 0;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNx = 385;
        XmNy = 0;
        XmNwidth = 182;
        XmNheight = 208;
    };
    controls {
         managed XmScrolledWindow resMembSW;
         managed XmLabel resMembLb;
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object resMembLb : XmLabel widget {
    arguments {
        arguments MyCommandStyle;
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Member :");
        XmNleftAttachment = XmATTACH_FORM;
        XmNtopOffset = 0;
        XmNleftOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 160;
        XmNheight = 26;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object resMembSW : XmScrolledWindow widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopOffset = 30;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNx = 0;
        XmNy = 30;
        XmNwidth = 182;
        XmNheight = 178;
    };
    controls {
         managed XmList resMembList;
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object resMembList : XmList widget {
    arguments {
        arguments MyCommandStyle;
        XmNwidth = 182;
        XmNheight = 178;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
        MrmNcreateCallback = procedure CreationCb(ResMembListID);
        XmNbrowseSelectionCallback = procedure ResClickCb(ResMembListID);
        XmNdefaultActionCallback = procedure ResFilterCb();
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object resDomForm : XmForm widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNtopOffset = 0;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNx = 5;
        XmNy = 0;
        XmNwidth = 179;
        XmNheight = 208;
    };
    controls {
         managed XmScrolledWindow resDomSW;
         managed XmLabel resDomLb;
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object resDomLb : XmLabel widget {
    arguments {
        arguments MyCommandStyle;
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Domain :");
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 171;
        XmNheight = 26;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object resDomSW : XmScrolledWindow widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopOffset = 30;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNx = 0;
        XmNy = 30;
        XmNwidth = 179;
        XmNheight = 178;
    };
    controls {
         managed XmList resDomList;
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object resDomList : XmList widget {
    arguments {
        arguments MyCommandStyle;
        XmNwidth = 179;
        XmNheight = 178;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
        MrmNcreateCallback = procedure CreationCb(ResDomListID);
        XmNbrowseSelectionCallback = procedure ResClickCb(ResDomListID);
        XmNdefaultActionCallback = procedure ResFilterCb();
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object resFamForm : XmForm widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmForm resDomForm;
        XmNtopOffset = 0;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNrightOffset = 0;
        XmNx = 194;
        XmNy = 0;
        XmNwidth = 181;
        XmNheight = 208;
    };
    controls {
         managed XmScrolledWindow resFamSW;
         managed XmLabel resFamLb;
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object resFamLb : XmLabel widget {
    arguments {
        arguments MyCommandStyle;
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Family :");
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 171;
        XmNheight = 26;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object resFamSW : XmScrolledWindow widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopOffset = 30;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNx = 0;
        XmNy = 30;
        XmNwidth = 181;
        XmNheight = 178;
    };
    controls {
         managed XmList resFamList;
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object resFamList : XmList widget {
    arguments {
        arguments MyCommandStyle;
        XmNwidth = 181;
        XmNheight = 178;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
        MrmNcreateCallback = procedure CreationCb(ResFamListID);
        XmNbrowseSelectionCallback = procedure ResClickCb(ResFamListID);
        XmNdefaultActionCallback = procedure ResFilterCb();
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object resNameForm : XmForm widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftWidget = XmForm resMembForm;
        XmNtopOffset = 0;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNrightOffset = 5;
        XmNx = 577;
        XmNy = 0;
        XmNwidth = 184;
        XmNheight = 208;
    };
    controls {
         managed XmScrolledWindow resNameSW;
         managed XmLabel resNameLb;
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object resNameLb : XmLabel widget {
    arguments {
        arguments MyCommandStyle;
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Name :");
        XmNleftAttachment = XmATTACH_FORM;
        XmNtopOffset = 0;
        XmNleftOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 160;
        XmNheight = 26;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object resNameSW : XmScrolledWindow widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopOffset = 30;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNx = 0;
        XmNy = 30;
        XmNwidth = 184;
        XmNheight = 178;
    };
    controls {
         managed XmList resNameList;
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object resNameList : XmList widget {
    arguments {
        arguments MyCommandStyle;
        XmNwidth = 184;
        XmNheight = 178;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
        MrmNcreateCallback = procedure CreationCb(ResNameListID);
        XmNbrowseSelectionCallback = procedure ResClickCb(ResNameListID);
        XmNdefaultActionCallback = procedure ResSelOKCb();
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object resFilterLb : XmLabel widget {
    arguments {
        arguments MyCommandStyle;
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Filter :");
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopOffset = 10;
        XmNleftOffset = 10;
        XmNrightOffset = 362;
        XmNx = 10;
        XmNy = 10;
        XmNwidth = 396;
        XmNheight = 26;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object resSelSep : XmSeparator widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNbottomOffset = 47;
        XmNleftOffset = 1;
        XmNrightOffset = 1;
        XmNx = 1;
        XmNy = 299;
        XmNwidth = 766;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object resSelCenterLb : XmLabel widget {
    arguments {
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftPosition = 50;
        XmNbottomOffset = 30;
        XmNrightOffset = 0;
        XmNx = 384;
        XmNy = 326;
        XmNwidth = 10;
        XmNheight = 10;
    };
    controls {
    };
    callbacks {
    };
};

object resSelOKPB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
!(BX)   _XmNlabelString = compound_string("Open");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftPosition = 8;
        XmNbottomOffset = 3;
        XmNrightOffset = 0;
        XmNx = 61;
        XmNy = 327;
        XmNwidth = 72;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
        MrmNcreateCallback = procedure ccb_make_parent_def_button();
        XmNactivateCallback = procedure ResSelOKCb();
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

object resSelFilterPB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
!(BX)   _XmNlabelString = compound_string("Filter");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftWidget = XmLabel resSelCenterLb;
        XmNbottomOffset = 3;
        XmNleftOffset = -42;
        XmNrightOffset = 0;
        XmNx = 342;
        XmNy = 327;
        XmNwidth = 72;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
        XmNactivateCallback = procedure ResFilterCb();
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

object resSelCancelPB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
!(BX)   _XmNlabelString = compound_string("Cancel");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_POSITION;
        XmNrightPosition = 91;
        XmNbottomOffset = 3;
        XmNleftOffset = 0;
        XmNx = 627;
        XmNy = 327;
        XmNwidth = 72;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
        XmNactivateCallback = procedure DismissCb(ResSelFormID);
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

!(BX)object devSelDialogShell : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNwidth = 540;
!(BX)        XmNheight = 457;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmFormDialog devSelForm;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object devSelForm : XmFormDialog widget {
    arguments {
        arguments MyCommandStyle;
        XmNautoUnmanage = false;
!(BX)   _XmNdialogTitle = compound_string("Selection of a device");
    };
    controls {
         managed XmPushButton devSelCancelPB;
         managed XmPushButton devSelFilterPB;
         managed XmPushButton devSelOKPB;
         managed XmLabel devSelCenterLb;
         managed XmSeparator devSelSep;
         managed XmLabel devSelectionLb;
         managed XmLabel devFilterLb;
         managed XmTextField devSelectionTF;
         managed XmForm devListsForm;
         managed XmTextField devFilterTF;
    };
    callbacks {
        callbacks MyCommandStyleReasons;
        MrmNcreateCallback = procedure CreationCb(DevSelFormID);
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object devFilterTF : XmTextField widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopWidget = XmLabel devFilterLb;
        XmNtopOffset = 0;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNrightOffset = 10;
        XmNx = 10;
        XmNy = 36;
        XmNwidth = 520;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
        MrmNcreateCallback = procedure CreationCb(DevFilterTFID);
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object devListsForm : XmForm widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopWidget = XmTextField devFilterTF;
        XmNbottomWidget = XmLabel devSelectionLb;
        XmNtopOffset = 10;
        XmNbottomOffset = 10;
        XmNleftOffset = 10;
        XmNrightOffset = 10;
        XmNx = 10;
        XmNy = 86;
        XmNwidth = 520;
        XmNheight = 228;
    };
    controls {
         managed XmForm familyForm;
         managed XmForm domainForm;
         managed XmForm memberForm;
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object memberForm : XmForm widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopOffset = 0;
        XmNbottomOffset = 0;
        XmNrightOffset = 5;
        XmNx = 369;
        XmNy = 0;
        XmNwidth = 146;
        XmNheight = 228;
    };
    controls {
         managed XmScrolledWindow memberSW;
         managed XmLabel memberLb;
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object memberLb : XmLabel widget {
    arguments {
        arguments MyCommandStyle;
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Member :");
        XmNleftAttachment = XmATTACH_FORM;
        XmNtopOffset = 0;
        XmNleftOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 160;
        XmNheight = 26;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object memberSW : XmScrolledWindow widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopOffset = 30;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNx = 0;
        XmNy = 30;
        XmNwidth = 146;
        XmNheight = 198;
    };
    controls {
         managed XmList memberList;
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object memberList : XmList widget {
    arguments {
        arguments MyCommandStyle;
        XmNwidth = 146;
        XmNheight = 198;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
        MrmNcreateCallback = procedure CreationCb(MemberListID);
        XmNbrowseSelectionCallback = procedure DevClickCb(MemberListID);
        XmNdefaultActionCallback = procedure DevSelOKCb();
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object domainForm : XmForm widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNtopOffset = 0;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNx = 5;
        XmNy = 0;
        XmNwidth = 151;
        XmNheight = 228;
    };
    controls {
         managed XmScrolledWindow domainSW;
         managed XmLabel domainLb;
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object domainLb : XmLabel widget {
    arguments {
        arguments MyCommandStyle;
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Domain :");
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 171;
        XmNheight = 26;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object domainSW : XmScrolledWindow widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopOffset = 30;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNx = 0;
        XmNy = 30;
        XmNwidth = 151;
        XmNheight = 198;
    };
    controls {
         managed XmList domainList;
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object domainList : XmList widget {
    arguments {
        arguments MyCommandStyle;
        XmNwidth = 151;
        XmNheight = 198;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
        MrmNcreateCallback = procedure CreationCb(DomainListID);
        XmNbrowseSelectionCallback = procedure DevClickCb(DomainListID);
        XmNdefaultActionCallback = procedure DevFilterCb();
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object familyForm : XmForm widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmForm domainForm;
        XmNrightWidget = XmForm memberForm;
        XmNtopOffset = 0;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNrightOffset = 10;
        XmNx = 166;
        XmNy = 0;
        XmNwidth = 193;
        XmNheight = 228;
    };
    controls {
         managed XmScrolledWindow familySW;
         managed XmLabel familyLb;
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object familyLb : XmLabel widget {
    arguments {
        arguments MyCommandStyle;
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Family :");
        XmNleftAttachment = XmATTACH_FORM;
        XmNtopOffset = 0;
        XmNleftOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 150;
        XmNheight = 26;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object familySW : XmScrolledWindow widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopOffset = 30;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNx = 0;
        XmNy = 30;
        XmNwidth = 193;
        XmNheight = 198;
    };
    controls {
         managed XmList familyList;
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object familyList : XmList widget {
    arguments {
        arguments MyCommandStyle;
        XmNwidth = 193;
        XmNheight = 198;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
        MrmNcreateCallback = procedure CreationCb(FamilyListID);
        XmNbrowseSelectionCallback = procedure DevClickCb(FamilyListID);
        XmNdefaultActionCallback = procedure DevFilterCb();
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object devSelectionTF : XmTextField widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNbottomWidget = XmSeparator devSelSep;
        XmNtopOffset = 0;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNrightOffset = 10;
        XmNx = 10;
        XmNy = 350;
        XmNwidth = 520;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
        MrmNcreateCallback = procedure CreationCb(DevSelectionTFID);
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object devFilterLb : XmLabel widget {
    arguments {
        arguments MyCommandStyle;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Filter :");
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopOffset = 10;
        XmNleftOffset = 10;
        XmNrightOffset = 362;
        XmNx = 10;
        XmNy = 10;
        XmNwidth = 168;
        XmNheight = 26;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object devSelectionLb : XmLabel widget {
    arguments {
        arguments MyCommandStyle;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Selection :");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNbottomWidget = XmTextField devSelectionTF;
        XmNtopOffset = 0;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNrightOffset = 306;
        XmNx = 10;
        XmNy = 324;
        XmNwidth = 224;
        XmNheight = 26;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object devSelSep : XmSeparator widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNbottomOffset = 47;
        XmNleftOffset = 1;
        XmNrightOffset = 1;
        XmNx = 1;
        XmNy = 390;
        XmNwidth = 538;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object devSelCenterLb : XmLabel widget {
    arguments {
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftPosition = 50;
        XmNbottomOffset = 30;
        XmNrightOffset = 0;
        XmNx = 270;
        XmNy = 417;
        XmNwidth = 10;
        XmNheight = 10;
    };
    controls {
    };
    callbacks {
    };
};

object devSelOKPB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
!(BX)   _XmNlabelString = compound_string("Open");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftPosition = 8;
        XmNbottomOffset = 3;
        XmNrightOffset = 0;
        XmNx = 43;
        XmNy = 418;
        XmNwidth = 72;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
        MrmNcreateCallback = procedure ccb_make_parent_def_button();
        XmNactivateCallback = procedure DevSelOKCb();
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

object devSelFilterPB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
!(BX)   _XmNlabelString = compound_string("Filter");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftWidget = XmLabel devSelCenterLb;
        XmNbottomOffset = 3;
        XmNleftOffset = -42;
        XmNx = 228;
        XmNy = 418;
        XmNwidth = 72;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
        XmNactivateCallback = procedure DevFilterCb();
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

object devSelCancelPB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
!(BX)   _XmNlabelString = compound_string("Cancel");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_POSITION;
        XmNrightPosition = 91;
        XmNbottomOffset = 3;
        XmNrightOffset = 0;
        XmNx = 419;
        XmNy = 418;
        XmNwidth = 72;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
        XmNactivateCallback = procedure DismissCb(DevSelFormID);
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

!(BX)object servUnregDialogShell : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNwidth = 245;
!(BX)        XmNheight = 108;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmMessageDialog servUnregMsgBox;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object servUnregMsgBox : XmMessageDialog widget {
    arguments {
        arguments MyInfoStyle;
!(BX)   _XmNdialogTitle = compound_string("Unregister");
        XmNdialogType = XmDIALOG_QUESTION;
!(BX)   _XmNmessageString = compound_string("  Really unregister the server ?" &
!(BX) "");
!(BX)   _XmNokLabelString = compound_string("Yes");
    };
    controls {
    };
    callbacks {
        callbacks MyInfoStyleReasons;
        MrmNcreateCallback = procedure CreationCb(ServUnregBoxID);
        XmNokCallback = procedure ServUnregOKCb();
    };
!(BX)    handlers {
!(BX)        handlers MyInfoStyleHandlers;
!(BX)    };
};

!(BX)object servDelOptionDialogShell : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNwidth = 274;
!(BX)        XmNheight = 157;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmFormDialog servDelOpForm;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object servDelOpForm : XmFormDialog widget {
    arguments {
        arguments MyCommandStyle;
        XmNdialogStyle = XmDIALOG_FULL_APPLICATION_MODAL;
!(BX)   _XmNdialogTitle = compound_string(" Delete server    ");
    };
    controls {
         managed XmPushButton servDelCancelPB;
         managed XmPushButton servDelOKPB;
         managed XmRadioBox servDelOpRadioBox;
    };
    callbacks {
        callbacks MyCommandStyleReasons;
        MrmNcreateCallback = procedure CreationCb(ServDelOpFormID);
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object servDelOpRadioBox : XmRadioBox widget {
    arguments {
        arguments MyCommandStyle;
        XmNpacking = XmPACK_COLUMN;
        XmNisHomogeneous = true;
        XmNtopAttachment = XmATTACH_POSITION;
        XmNbottomAttachment = XmATTACH_POSITION;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_POSITION;
        XmNtopPosition = 11;
        XmNbottomPosition = 56;
        XmNleftPosition = 10;
        XmNrightPosition = 90;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNx = 27;
        XmNy = 17;
        XmNwidth = 220;
        XmNheight = 71;
    };
    controls {
         managed XmToggleButton servDelWithResTB;
         managed XmToggleButton servDelTB;
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object servDelWithResTB : XmToggleButton widget {
    arguments {
        arguments MyCommandStyle;
!(BX)   _XmNlabelString = compound_string("  With its resources");
        XmNwidth = 214;
        XmNheight = 28;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
        MrmNcreateCallback = procedure CreationCb(ServDelWResTBID);
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object servDelTB : XmToggleButton widget {
    arguments {
        arguments MyCommandStyle;
!(BX)   _XmNlabelString = compound_string("  Without its resources");
        XmNwidth = 214;
        XmNheight = 28;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
        MrmNcreateCallback = procedure CreationCb(ServDelNWResTBID);
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object servDelOKPB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
!(BX)   _XmNlabelString = compound_string("OK");
        XmNtopAttachment = XmATTACH_POSITION;
        XmNbottomAttachment = XmATTACH_POSITION;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_POSITION;
        XmNtopPosition = 64;
        XmNbottomPosition = 94;
        XmNleftPosition = 11;
        XmNrightPosition = 42;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNx = 30;
        XmNy = 100;
        XmNwidth = 85;
        XmNheight = 48;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
        MrmNcreateCallback = procedure ccb_make_parent_def_button();
        XmNactivateCallback = procedure ServDelOKCb();
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

object servDelCancelPB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
!(BX)   _XmNlabelString = compound_string("Cancel");
        XmNtopAttachment = XmATTACH_POSITION;
        XmNbottomAttachment = XmATTACH_POSITION;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_POSITION;
        XmNtopPosition = 64;
        XmNbottomPosition = 94;
        XmNleftPosition = 59;
        XmNrightPosition = 90;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNx = 162;
        XmNy = 100;
        XmNwidth = 85;
        XmNheight = 48;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
        XmNactivateCallback = procedure DismissCb(ServDelOpFormID);
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

!(BX)object servDialogShell : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNmwmFunctions = 33;
!(BX)        XmNwidth = 616;
!(BX)        XmNheight = 807;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmFormDialog servForm;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object servForm : XmFormDialog widget {
    arguments {
        arguments greta_main_style;
        XmNautoUnmanage = false;
    };
    controls {
         managed XmPushButton servRestartPB;
         managed XmPushButton servUnregPB;
         managed XmPushButton servDeletePB;
         managed XmPushButton servUpdatePB;
         managed XmPushButton servCancelPB;
         managed XmMenuBar servMenuBar;
         managed XmSeparator servSep;
         managed XmPanedWindow serverPanedWindow;
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object serverPanedWindow : XmPanedWindow widget {
    arguments {
        arguments greta_main_style;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopOffset = 40;
        XmNbottomOffset = 56;
        XmNleftOffset = 1;
        XmNrightOffset = 1;
        XmNx = 1;
        XmNy = 40;
        XmNwidth = 614;
        XmNheight = 711;
    };
    controls {
         managed XmForm servInfoForm;
         managed XmForm servDevListForm;
         managed XmForm servResForm;
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object servInfoForm : XmForm widget {
    arguments {
        arguments greta_main_style;
        XmNwidth = 608;
        XmNheight = 172;
    };
    controls {
         managed XmScrolledWindow servInfoSW;
         managed XmLabel servInfoLb;
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object servInfoLb : XmLabel widget {
    arguments {
        arguments greta_main_style;
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("  Informations :");
        XmNtopOffset = 0;
        XmNleftOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 139;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object servInfoSW : XmScrolledWindow widget {
    arguments {
        arguments greta_main_style;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopOffset = 30;
        XmNbottomOffset = 10;
        XmNleftOffset = 5;
        XmNrightOffset = 5;
        XmNx = 5;
        XmNy = 30;
        XmNwidth = 598;
        XmNheight = 132;
    };
    controls {
         managed XmText servInfoText;
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object servInfoText : XmText widget {
    arguments {
        arguments MyWorkStyleNonEdit;
        XmNeditMode = XmMULTI_LINE_EDIT;
        XmNeditable = false;
    };
    controls {
    };
    callbacks {
        callbacks MyWorkStyleNonEditReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyWorkStyleNonEditHandlers;
!(BX)    };
};

object servDevListForm : XmForm widget {
    arguments {
        arguments greta_main_style;
        XmNwidth = 608;
        XmNheight = 167;
    };
    controls {
         managed XmScrolledWindow servDevListSW;
         managed XmLabel servDevListLb;
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object servDevListLb : XmLabel widget {
    arguments {
        arguments greta_main_style;
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("  In charge devices list :");
        XmNtopOffset = 0;
        XmNleftOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 207;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object servDevListSW : XmScrolledWindow widget {
    arguments {
        arguments greta_main_style;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopOffset = 30;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 5;
        XmNx = 5;
        XmNy = 30;
        XmNwidth = 598;
        XmNheight = 137;
    };
    controls {
         managed XmText servDevListText;
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object servDevListText : XmText widget {
    arguments {
        arguments MyWorkStyle;
        XmNeditMode = XmMULTI_LINE_EDIT;
    };
    controls {
    };
    callbacks {
        callbacks MyWorkStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyWorkStyleHandlers;
!(BX)    };
};

object servResForm : XmForm widget {
    arguments {
        arguments greta_main_style;
        XmNwidth = 608;
        XmNheight = 350;
    };
    controls {
         managed XmScrolledWindow servResSW;
         managed XmLabel servResLb;
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object servResLb : XmLabel widget {
    arguments {
        arguments greta_main_style;
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("  Resources :");
        XmNtopOffset = 0;
        XmNleftOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 125;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object servResSW : XmScrolledWindow widget {
    arguments {
        arguments greta_main_style;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopOffset = 30;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 5;
        XmNx = 5;
        XmNy = 30;
        XmNwidth = 598;
        XmNheight = 320;
    };
    controls {
         managed XmText servResText;
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object servResText : XmText widget {
    arguments {
        arguments MyWorkStyle;
        XmNeditMode = XmMULTI_LINE_EDIT;
    };
    controls {
    };
    callbacks {
        callbacks MyWorkStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyWorkStyleHandlers;
!(BX)        serv_reso_text_event_hand(ButtonPressMask, true, 1);
!(BX)    };
};

object servSep : XmSeparator widget {
    arguments {
        arguments greta_main_style;
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNbottomOffset = 40;
        XmNleftOffset = 1;
        XmNrightOffset = 1;
        XmNx = 1;
        XmNy = 747;
        XmNwidth = 614;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object servMenuBar : XmMenuBar widget {
    arguments {
        arguments greta_menu_style;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 616;
        XmNheight = 32;
    };
    controls {
         managed XmCascadeButton fileCascadeButton2;
         managed XmCascadeButton editCascadeButton2;
    };
    callbacks {
        callbacks greta_menu_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object fileCascadeButton2 : XmCascadeButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("File");
!(BX)   _XmNmnemonic = keysym("F");
        XmNx = 5;
        XmNy = 5;
        XmNwidth = 39;
        XmNheight = 22;
    };
    controls {
         unmanaged XmPulldownMenu filePulldownMenu2;
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        MrmNcreateCallback = procedure file_button_cb(0);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object filePulldownMenu2 : XmPulldownMenu widget {
    arguments {
        arguments greta_menu_style;
    };
    controls {
         managed XmPushButton servPrintPB;
         managed XmPushButton servSavePB;
         managed XmPushButton servSaveAsPB;
         managed XmPushButton servDismissPB;
    };
    callbacks {
        callbacks greta_menu_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object servPrintPB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Print ...");
!(BX)   _XmNmnemonic = keysym("P");
!(BX)   _XmNaccelerator = "Ctrl<Key>p";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+P");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
       XmNactivateCallback = procedures {
                 ServPreparePrintCb(1);
                 DialogCb(PrintFormID);
        };
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object servSavePB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
        XmNsensitive = false;
!(BX)   _XmNlabelString = compound_string("Save");
!(BX)   _XmNmnemonic = keysym("S");
!(BX)   _XmNaccelerator = "Ctrl<Key>s";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+S");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure ServSaveCb(1);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object servSaveAsPB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Save As ...");
!(BX)   _XmNmnemonic = keysym("S");
!(BX)   _XmNaccelerator = "Ctrl<Key>a";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+A");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure ServSaveShowFileSelCb(1);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object servDismissPB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Dismiss");
!(BX)   _XmNmnemonic = keysym("D");
!(BX)   _XmNaccelerator = "Ctrl<Key>d";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+D");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure ServDismissCb(1);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object editCascadeButton2 : XmCascadeButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Edit");
!(BX)   _XmNmnemonic = keysym("E");
        XmNx = 44;
        XmNy = 5;
        XmNwidth = 41;
        XmNheight = 22;
    };
    controls {
         unmanaged XmPulldownMenu editPulldownMenu2;
    };
    callbacks {
        callbacks greta_menu_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object editPulldownMenu2 : XmPulldownMenu widget {
    arguments {
        arguments greta_menu_style;
    };
    controls {
         managed XmPushButton servUndoPB;
         managed XmPushButton servCutPB;
         managed XmPushButton servCopyPB;
         managed XmPushButton servPastePB;
         managed XmPushButton servTextDeletePB;
         managed XmPushButton servChainResPB;
    };
    callbacks {
        callbacks greta_menu_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object servUndoPB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Undo");
!(BX)   _XmNmnemonic = keysym("U");
!(BX)   _XmNaccelerator = "Ctrl<Key>z";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+Z");
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure ServUndoCb(1);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object servCutPB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Cut");
!(BX)   _XmNmnemonic = keysym("t");
!(BX)   _XmNaccelerator = "<Key>Del";
!(BX)   _XmNacceleratorText = compound_string("Del");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure ServCutCb(1);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object servCopyPB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Copy");
!(BX)   _XmNmnemonic = keysym("C");
!(BX)   _XmNaccelerator = "Ctrl<Key>c";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+C");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure ServCopyCb(1);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object servPastePB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Paste");
!(BX)   _XmNmnemonic = keysym("P");
!(BX)   _XmNaccelerator = "Ctrl<Key>v";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+V");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure ServPasteCb(1);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object servTextDeletePB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Delete");
!(BX)   _XmNmnemonic = keysym("D");
!(BX)   _XmNaccelerator = "Ctrl<Key>x";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+X");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure ServDeleteCb(1);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object servChainResPB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Insert device resources");
!(BX)   _XmNmnemonic = keysym("I");
!(BX)   _XmNaccelerator = "Ctrl<Key>i";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+I");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure ServChainResCb(1);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object servCancelPB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
!(BX)   _XmNlabelString = compound_string("Cancel");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftPosition = 25;
        XmNbottomOffset = 3;
        XmNrightOffset = 0;
        XmNx = 154;
        XmNy = 768;
        XmNwidth = 72;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
        XmNactivateCallback = procedure ServDismissCb(1);
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

object servUpdatePB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
!(BX)   _XmNlabelString = compound_string("Update");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftPosition = 5;
        XmNbottomOffset = 3;
        XmNrightOffset = 0;
        XmNx = 31;
        XmNy = 768;
        XmNwidth = 72;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
        MrmNcreateCallback = procedure ccb_make_parent_def_button();
       XmNactivateCallback = procedures {
                 ServPrepareUpdateCb(1);
                 DialogCb(ServUpdateBoxID);
        };
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

object servDeletePB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
!(BX)   _XmNlabelString = compound_string("Delete");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftPosition = 64;
        XmNbottomOffset = 3;
        XmNrightOffset = 0;
        XmNx = 394;
        XmNy = 768;
        XmNwidth = 72;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
       XmNactivateCallback = procedures {
                 PrepareServDelCb(1);
                 DialogCb(ServDelOpFormID);
        };
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

object servUnregPB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
!(BX)   _XmNlabelString = compound_string("Unreg");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftPosition = 44;
        XmNbottomOffset = 3;
        XmNrightOffset = 0;
        XmNx = 271;
        XmNy = 768;
        XmNwidth = 72;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
        XmNactivateCallback = procedure ServUnregCb(1);
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

object servRestartPB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
        XmNsensitive = true;
!(BX)   _XmNlabelString = compound_string("(Re)Start");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftPosition = 83;
        XmNbottomOffset = 3;
        XmNrightOffset = 0;
        XmNx = 511;
        XmNy = 768;
        XmNwidth = 72;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
        XmNactivateCallback = procedure ServRestartCb();
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

!(BX)object servSelDialogShell : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNwidth = 423;
!(BX)        XmNheight = 460;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmFormDialog servSelForm;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object servSelForm : XmFormDialog widget {
    arguments {
        arguments MyCommandStyle;
        XmNautoUnmanage = false;
!(BX)   _XmNdialogTitle = compound_string("Selection of a server");
    };
    controls {
         managed XmPushButton servSelCancelPB;
         managed XmPushButton servSelFilterPB;
         managed XmPushButton servSelOKPB;
         managed XmLabel label;
         managed XmSeparator servSelSep;
         managed XmLabel servSelectionLb;
         managed XmLabel servFilterLb;
         managed XmTextField servSelectionTF;
         managed XmForm servListsForm;
         managed XmTextField servFilterTF;
    };
    callbacks {
        callbacks MyCommandStyleReasons;
        MrmNcreateCallback = procedure CreationCb(ServSelFormID);
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object servFilterTF : XmTextField widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopWidget = XmLabel servFilterLb;
        XmNtopOffset = 0;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNrightOffset = 10;
        XmNx = 10;
        XmNy = 36;
        XmNwidth = 403;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
        MrmNcreateCallback = procedure CreationCb(ServFilterTFID);
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object servListsForm : XmForm widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopWidget = XmTextField servFilterTF;
        XmNbottomWidget = XmLabel servSelectionLb;
        XmNtopOffset = 10;
        XmNbottomOffset = 10;
        XmNleftOffset = 10;
        XmNrightOffset = 10;
        XmNx = 10;
        XmNy = 86;
        XmNwidth = 403;
        XmNheight = 231;
    };
    controls {
         managed XmForm classForm;
         managed XmForm pnameForm;
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object pnameForm : XmForm widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftPosition = 51;
        XmNtopOffset = 0;
        XmNbottomOffset = 0;
        XmNrightOffset = 5;
        XmNx = 206;
        XmNy = 0;
        XmNwidth = 192;
        XmNheight = 231;
    };
    controls {
         managed XmScrolledWindow pnameSW;
         managed XmLabel pnameLb;
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object pnameLb : XmLabel widget {
    arguments {
        arguments MyCommandStyle;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Personal Name :");
        XmNleftAttachment = XmATTACH_FORM;
        XmNtopOffset = 0;
        XmNleftOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 160;
        XmNheight = 26;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object pnameSW : XmScrolledWindow widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopOffset = 30;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNx = 0;
        XmNy = 30;
        XmNwidth = 192;
        XmNheight = 201;
    };
    controls {
         managed XmList pnameList;
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object pnameList : XmList widget {
    arguments {
        arguments MyCommandStyle;
        XmNwidth = 192;
        XmNheight = 201;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
        MrmNcreateCallback = procedure CreationCb(PnameListID);
        XmNbrowseSelectionCallback = procedure ServClickCb(PnameListID);
        XmNdefaultActionCallback = procedure ServSelOKCb();
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object classForm : XmForm widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_POSITION;
        XmNrightPosition = 49;
        XmNtopOffset = 0;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNx = 5;
        XmNy = 0;
        XmNwidth = 192;
        XmNheight = 231;
    };
    controls {
         managed XmScrolledWindow classSW;
         managed XmLabel classLb;
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object classLb : XmLabel widget {
    arguments {
        arguments MyCommandStyle;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Class :");
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 171;
        XmNheight = 26;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object classSW : XmScrolledWindow widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopOffset = 30;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNx = 0;
        XmNy = 30;
        XmNwidth = 192;
        XmNheight = 201;
    };
    controls {
         managed XmList classList;
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object classList : XmList widget {
    arguments {
        arguments MyCommandStyle;
        XmNwidth = 192;
        XmNheight = 201;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
        MrmNcreateCallback = procedure CreationCb(ClassListID);
        XmNbrowseSelectionCallback = procedure ServClickCb(ClassListID);
        XmNdefaultActionCallback = procedure ServFilterCb();
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object servSelectionTF : XmTextField widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNbottomWidget = XmSeparator servSelSep;
        XmNtopOffset = 0;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNrightOffset = 10;
        XmNx = 10;
        XmNy = 353;
        XmNwidth = 403;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
        MrmNcreateCallback = procedure CreationCb(ServSelectionTFID);
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object servFilterLb : XmLabel widget {
    arguments {
        arguments MyCommandStyle;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Filter :");
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopOffset = 10;
        XmNleftOffset = 10;
        XmNrightOffset = 362;
        XmNx = 10;
        XmNy = 10;
        XmNwidth = 51;
        XmNheight = 26;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object servSelectionLb : XmLabel widget {
    arguments {
        arguments MyCommandStyle;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Selection :");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNbottomWidget = XmTextField servSelectionTF;
        XmNtopOffset = 0;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNrightOffset = 306;
        XmNx = 10;
        XmNy = 327;
        XmNwidth = 107;
        XmNheight = 26;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object servSelSep : XmSeparator widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNbottomOffset = 47;
        XmNleftOffset = 1;
        XmNrightOffset = 1;
        XmNx = 1;
        XmNy = 393;
        XmNwidth = 421;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object label : XmLabel widget {
    arguments {
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftPosition = 50;
        XmNbottomOffset = 30;
        XmNrightOffset = 0;
        XmNx = 212;
        XmNy = 420;
        XmNwidth = 10;
        XmNheight = 10;
    };
    controls {
    };
    callbacks {
    };
};

object servSelOKPB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
!(BX)   _XmNlabelString = compound_string("Open");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftPosition = 8;
        XmNbottomOffset = 3;
        XmNrightOffset = 0;
        XmNx = 34;
        XmNy = 421;
        XmNwidth = 72;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
        MrmNcreateCallback = procedure ccb_make_parent_def_button();
        XmNactivateCallback = procedure ServSelOKCb();
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

object servSelFilterPB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
!(BX)   _XmNlabelString = compound_string("Filter");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftWidget = XmLabel label;
        XmNbottomOffset = 3;
        XmNleftOffset = -42;
        XmNx = 170;
        XmNy = 421;
        XmNwidth = 72;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
        XmNactivateCallback = procedure ServFilterCb();
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

object servSelCancelPB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
!(BX)   _XmNlabelString = compound_string("Cancel");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_POSITION;
        XmNrightPosition = 91;
        XmNbottomOffset = 3;
        XmNrightOffset = 0;
        XmNx = 313;
        XmNy = 421;
        XmNwidth = 72;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
        XmNactivateCallback = procedure DismissCb(ServSelFormID);
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

!(BX)object errorDialogShell : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNwidth = 208;
!(BX)        XmNheight = 106;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmMessageDialog errorBox;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object errorBox : XmMessageDialog widget {
    arguments {
        arguments MyErrorStyle;
    };
    controls {
        Xm_Symbol managed {
            arguments {
                arguments MyErrorStyle;
            };
            callbacks {
                    callbacks MyErrorStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyErrorStyleHandlers;
!(BX)            };
        };
        Xm_Separator managed {
            arguments {
                arguments MyErrorStyle;
            };
            callbacks {
                    callbacks MyErrorStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyErrorStyleHandlers;
!(BX)            };
        };
        Xm_Message managed {
            arguments {
                arguments MyErrorStyle;
            };
            callbacks {
                    callbacks MyErrorStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyErrorStyleHandlers;
!(BX)            };
        };
        Xm_OK managed {
            arguments {
                arguments MyErrorStyle;
            };
            callbacks {
                    callbacks MyErrorStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyErrorStyleHandlers;
!(BX)            };
        };
        Xm_Cancel managed {
            arguments {
                arguments MyErrorStyle;
            };
            callbacks {
                    callbacks MyErrorStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyErrorStyleHandlers;
!(BX)            };
        };
        Xm_Help managed {
            arguments {
                arguments MyErrorStyle;
            };
            callbacks {
                    callbacks MyErrorStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyErrorStyleHandlers;
!(BX)            };
        };
    };
    callbacks {
        callbacks MyErrorStyleReasons;
        MrmNcreateCallback = procedure CreationCb(ErrorBoxID);
    };
!(BX)    handlers {
!(BX)        handlers MyErrorStyleHandlers;
!(BX)    };
};

!(BX)object devDialogShell : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNmwmFunctions = 33;
!(BX)        XmNwidth = 605;
!(BX)        XmNheight = 725;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmFormDialog devForm;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object devForm : XmFormDialog widget {
    arguments {
        arguments greta_main_style;
        XmNautoUnmanage = false;
    };
    controls {
         managed XmPushButton devRestartPB;
         managed XmPushButton devPingPB;
         managed XmPushButton devDeletePB;
         managed XmPushButton devUpdatePB;
         managed XmPushButton devCancelPB;
         managed XmMenuBar devMenuBar;
         managed XmSeparator separator;
         managed XmPanedWindow devicePanedWindow;
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object devicePanedWindow : XmPanedWindow widget {
    arguments {
        arguments greta_main_style;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopOffset = 40;
        XmNbottomOffset = 56;
        XmNleftOffset = 1;
        XmNrightOffset = 1;
        XmNx = 1;
        XmNy = 40;
        XmNwidth = 603;
        XmNheight = 629;
    };
    controls {
         managed XmForm devInfoForm;
         managed XmForm devResForm;
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object devInfoForm : XmForm widget {
    arguments {
        arguments greta_main_style;
        XmNwidth = 597;
        XmNheight = 185;
    };
    controls {
         managed XmScrolledWindow devInfoSW;
         managed XmLabel devInfoLb;
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object devInfoLb : XmLabel widget {
    arguments {
        arguments greta_main_style;
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("  Informations :");
        XmNtopOffset = 0;
        XmNleftOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 140;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object devInfoSW : XmScrolledWindow widget {
    arguments {
        arguments greta_main_style;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopOffset = 30;
        XmNbottomOffset = 10;
        XmNleftOffset = 5;
        XmNrightOffset = 5;
        XmNx = 5;
        XmNy = 30;
        XmNwidth = 587;
        XmNheight = 145;
    };
    controls {
         managed XmText devInfoText;
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object devInfoText : XmText widget {
    arguments {
        arguments MyWorkStyleNonEdit;
        XmNeditMode = XmMULTI_LINE_EDIT;
        XmNeditable = false;
    };
    controls {
    };
    callbacks {
        callbacks MyWorkStyleNonEditReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyWorkStyleNonEditHandlers;
!(BX)    };
};

object devResForm : XmForm widget {
    arguments {
        arguments greta_main_style;
        XmNwidth = 597;
        XmNheight = 430;
    };
    controls {
         managed XmScrolledWindow devResSW;
         managed XmLabel devResLb;
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object devResLb : XmLabel widget {
    arguments {
        arguments greta_main_style;
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("  Resources :");
        XmNtopOffset = 0;
        XmNleftOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 120;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object devResSW : XmScrolledWindow widget {
    arguments {
        arguments greta_main_style;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopOffset = 30;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 5;
        XmNx = 5;
        XmNy = 30;
        XmNwidth = 587;
        XmNheight = 400;
    };
    controls {
         managed XmText devResText;
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object devResText : XmText widget {
    arguments {
        arguments MyWorkStyle;
        XmNeditMode = XmMULTI_LINE_EDIT;
    };
    controls {
    };
    callbacks {
        callbacks MyWorkStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyWorkStyleHandlers;
!(BX)        dev_reso_text_event_hand(ButtonPressMask, true, 1);
!(BX)    };
};

object separator : XmSeparator widget {
    arguments {
        arguments greta_main_style;
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNbottomOffset = 40;
        XmNleftOffset = 1;
        XmNrightOffset = 1;
        XmNx = 1;
        XmNy = 665;
        XmNwidth = 603;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object devMenuBar : XmMenuBar widget {
    arguments {
        arguments greta_menu_style;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 605;
        XmNheight = 32;
    };
    controls {
         managed XmCascadeButton fileCascadeButton1;
         managed XmCascadeButton editCascadeButton1;
    };
    callbacks {
        callbacks greta_menu_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object fileCascadeButton1 : XmCascadeButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("File");
!(BX)   _XmNmnemonic = keysym("F");
        XmNx = 5;
        XmNy = 5;
        XmNwidth = 39;
        XmNheight = 22;
    };
    controls {
         unmanaged XmPulldownMenu filePulldownMenu1;
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        MrmNcreateCallback = procedure file_button_cb(0);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object filePulldownMenu1 : XmPulldownMenu widget {
    arguments {
        arguments greta_menu_style;
    };
    controls {
         managed XmPushButton devPrintPB;
         managed XmPushButton devSavePB;
         managed XmPushButton devSaveAsPB;
         managed XmPushButton devDismissPB;
    };
    callbacks {
        callbacks greta_menu_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object devPrintPB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Print ...");
!(BX)   _XmNmnemonic = keysym("P");
!(BX)   _XmNaccelerator = "Ctrl<Key>p";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+P");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
       XmNactivateCallback = procedures {
                 DevPreparePrintCb(1);
                 DialogCb(PrintFormID);
        };
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object devSavePB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
        XmNsensitive = false;
!(BX)   _XmNlabelString = compound_string("Save");
!(BX)   _XmNmnemonic = keysym("S");
!(BX)   _XmNaccelerator = "Ctrl<Key>s";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+S");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure DevSaveCb(1);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object devSaveAsPB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Save As ...");
!(BX)   _XmNmnemonic = keysym("S");
!(BX)   _XmNaccelerator = "Ctrl<Key>a";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+A");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure DevSaveShowFileSelCb(1);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object devDismissPB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Dismiss");
!(BX)   _XmNmnemonic = keysym("D");
!(BX)   _XmNaccelerator = "Ctrl<Key>d";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+D");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure DevDismissCb(1);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object editCascadeButton1 : XmCascadeButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Edit");
!(BX)   _XmNmnemonic = keysym("E");
        XmNx = 44;
        XmNy = 5;
        XmNwidth = 41;
        XmNheight = 22;
    };
    controls {
         unmanaged XmPulldownMenu editPulldownMenu1;
    };
    callbacks {
        callbacks greta_menu_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object editPulldownMenu1 : XmPulldownMenu widget {
    arguments {
        arguments greta_menu_style;
    };
    controls {
         managed XmPushButton devUndoPB;
         managed XmPushButton devCutPB;
         managed XmPushButton devCopyPB;
         managed XmPushButton devPastePB;
         managed XmPushButton devTextDeletePB;
         managed XmPushButton devChainResPB;
    };
    callbacks {
        callbacks greta_menu_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object devUndoPB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Undo");
!(BX)   _XmNmnemonic = keysym("U");
!(BX)   _XmNaccelerator = "Ctrl<Key>z";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+Z");
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure DevUndoCb(1);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object devCutPB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Cut");
!(BX)   _XmNmnemonic = keysym("t");
!(BX)   _XmNaccelerator = "<Key>Del";
!(BX)   _XmNacceleratorText = compound_string("Del");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure DevCutCb(1);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object devCopyPB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Copy");
!(BX)   _XmNmnemonic = keysym("C");
!(BX)   _XmNaccelerator = "Ctrl<Key>c";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+C");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure DevCopyCb(1);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object devPastePB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Paste");
!(BX)   _XmNmnemonic = keysym("P");
!(BX)   _XmNaccelerator = "Ctrl<Key>v";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+V");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure DevPasteCb(1);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object devTextDeletePB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Delete");
!(BX)   _XmNmnemonic = keysym("D");
!(BX)   _XmNaccelerator = "Ctrl<Key>x";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+X");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure DevDeleteCb(1);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object devChainResPB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Insert device resources");
!(BX)   _XmNmnemonic = keysym("I");
!(BX)   _XmNaccelerator = "Ctrl<Key>i";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+I");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure DevChainResCb(1);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object devCancelPB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
!(BX)   _XmNlabelString = compound_string("Cancel");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftPosition = 25;
        XmNbottomOffset = 3;
        XmNrightOffset = 0;
        XmNx = 151;
        XmNy = 686;
        XmNwidth = 72;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
        XmNactivateCallback = procedure DevDismissCb(1);
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

object devUpdatePB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
!(BX)   _XmNlabelString = compound_string("Update");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftPosition = 5;
        XmNbottomOffset = 3;
        XmNrightOffset = 0;
        XmNx = 30;
        XmNy = 686;
        XmNwidth = 72;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
        MrmNcreateCallback = procedure ccb_make_parent_def_button();
       XmNactivateCallback = procedures {
                 DevPrepareUpdateCb(1);
                 DialogCb(DevUpdateBoxID);
        };
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

object devDeletePB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
!(BX)   _XmNlabelString = compound_string("Delete");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftPosition = 44;
        XmNbottomOffset = 3;
        XmNrightOffset = 0;
        XmNx = 266;
        XmNy = 686;
        XmNwidth = 72;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
       XmNactivateCallback = procedures {
                 PrepareDevDelCb(1);
                 DialogCb(DevDelOpFormID);
        };
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

object devPingPB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
!(BX)   _XmNlabelString = compound_string("Ping");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftPosition = 64;
        XmNbottomOffset = 3;
        XmNleftOffset = 0;
        XmNx = 387;
        XmNy = 686;
        XmNwidth = 72;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
        XmNactivateCallback = procedure DevPingCb();
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

object devRestartPB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
        XmNsensitive = true;
!(BX)   _XmNlabelString = compound_string("(Re)Start");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftPosition = 83;
        XmNbottomOffset = 3;
        XmNleftOffset = 0;
        XmNx = 502;
        XmNy = 686;
        XmNwidth = 72;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
       XmNactivateCallback = procedures {
                 DevRestartCb();
                 DialogCb(ServRestartBoxID);
        };
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

!(BX)object devDelOptionDialogShell : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNwidth = 274;
!(BX)        XmNheight = 157;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmFormDialog devDelOpForm;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object devDelOpForm : XmFormDialog widget {
    arguments {
        arguments MyCommandStyle;
        XmNdialogStyle = XmDIALOG_FULL_APPLICATION_MODAL;
!(BX)   _XmNdialogTitle = compound_string(" Delete device    ");
    };
    controls {
         managed XmPushButton devDelCancelPB;
         managed XmPushButton devDelOKPB;
         managed XmRadioBox devDelOpRadioBox;
    };
    callbacks {
        callbacks MyCommandStyleReasons;
        MrmNcreateCallback = procedure CreationCb(DevDelOpFormID);
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object devDelOpRadioBox : XmRadioBox widget {
    arguments {
        arguments MyCommandStyle;
        XmNpacking = XmPACK_COLUMN;
        XmNisHomogeneous = true;
        XmNtopAttachment = XmATTACH_POSITION;
        XmNbottomAttachment = XmATTACH_POSITION;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_POSITION;
        XmNtopPosition = 11;
        XmNbottomPosition = 56;
        XmNleftPosition = 10;
        XmNrightPosition = 90;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNx = 27;
        XmNy = 17;
        XmNwidth = 220;
        XmNheight = 71;
    };
    controls {
         managed XmToggleButton devDelWithResTB;
         managed XmToggleButton devDelTB;
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object devDelWithResTB : XmToggleButton widget {
    arguments {
        arguments MyCommandStyle;
!(BX)   _XmNlabelString = compound_string("  With its resources");
        XmNwidth = 214;
        XmNheight = 28;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
        MrmNcreateCallback = procedure CreationCb(DevDelWResTBID);
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object devDelTB : XmToggleButton widget {
    arguments {
        arguments MyCommandStyle;
!(BX)   _XmNlabelString = compound_string("  Without its resources");
        XmNwidth = 214;
        XmNheight = 28;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
        MrmNcreateCallback = procedure CreationCb(DevDelNWResTBID);
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object devDelOKPB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
!(BX)   _XmNlabelString = compound_string("OK");
        XmNtopAttachment = XmATTACH_POSITION;
        XmNbottomAttachment = XmATTACH_POSITION;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_POSITION;
        XmNtopPosition = 64;
        XmNbottomPosition = 94;
        XmNleftPosition = 11;
        XmNrightPosition = 42;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNx = 30;
        XmNy = 100;
        XmNwidth = 85;
        XmNheight = 48;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
        MrmNcreateCallback = procedure ccb_make_parent_def_button();
        XmNactivateCallback = procedure DevDelOKCb();
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

object devDelCancelPB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
!(BX)   _XmNlabelString = compound_string("Cancel");
        XmNtopAttachment = XmATTACH_POSITION;
        XmNbottomAttachment = XmATTACH_POSITION;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_POSITION;
        XmNtopPosition = 64;
        XmNbottomPosition = 94;
        XmNleftPosition = 59;
        XmNrightPosition = 90;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNx = 162;
        XmNy = 100;
        XmNwidth = 85;
        XmNheight = 48;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
        XmNactivateCallback = procedure DismissCb(DevDelOpFormID);
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

!(BX)object quitDialogShell : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNwidth = 208;
!(BX)        XmNheight = 108;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmMessageDialog quitMsgBox;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object quitMsgBox : XmMessageDialog widget {
    arguments {
        arguments MyInfoStyle;
        XmNdialogStyle = XmDIALOG_SYSTEM_MODAL;
!(BX)   _XmNdialogTitle = compound_string("Exit");
!(BX)   _XmNdialogType = XmDIALOG_QUESTION;
!(BX)   _XmNmessageString = compound_string("  Really quit ?");
!(BX)   _XmNokLabelString = compound_string("Yes");
    };
    controls {
    };
    callbacks {
        callbacks MyInfoStyleReasons;
        MrmNcreateCallback = procedure CreationCb(QuitMsgBoxID);
        XmNokCallback = procedure QuitCb();
    };
!(BX)    handlers {
!(BX)        handlers MyInfoStyleHandlers;
!(BX)    };
};

!(BX)object printDialogShell : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNwidth = 460;
!(BX)        XmNheight = 225;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmFormDialog printForm;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object printForm : XmFormDialog widget {
    arguments {
        arguments MyCommandStyle;
        XmNdialogStyle = XmDIALOG_FULL_APPLICATION_MODAL;
!(BX)   _XmNdialogTitle = compound_string("Print   ");
    };
    controls {
         managed XmPushButton printCancelPB;
         managed XmPushButton printOKPB;
         managed XmTextField a2psOptionsTextF;
         managed XmLabel a2psOptionsLb;
         managed XmLabel lpOptionsLb;
         managed XmTextField lpOptionsTextF;
         managed XmSeparator printSep;
         managed XmTextField copiesNbTextF;
         managed XmLabel copiesNbLb;
    };
    callbacks {
        callbacks MyCommandStyleReasons;
        MrmNcreateCallback = procedure CreationCb(PrintFormID);
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object copiesNbLb : XmLabel widget {
    arguments {
        arguments MyCommandStyle;
!(BX)   _XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Copies Number  :");
        XmNtopAttachment = XmATTACH_POSITION;
        XmNbottomAttachment = XmATTACH_POSITION;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_POSITION;
        XmNtopPosition = 6;
        XmNbottomPosition = 22;
        XmNleftPosition = 2;
        XmNrightPosition = 37;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNx = 9;
        XmNy = 14;
        XmNwidth = 161;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object copiesNbTextF : XmTextField widget {
    arguments {
        arguments MyCommandStyle;
!(BX)   _XmNvalue = "1";
        XmNtopAttachment = XmATTACH_POSITION;
        XmNbottomAttachment = XmATTACH_POSITION;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_POSITION;
        XmNtopPosition = 4;
        XmNbottomPosition = 24;
        XmNleftPosition = 37;
        XmNrightPosition = 46;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNx = 170;
        XmNy = 9;
        XmNwidth = 42;
        XmNheight = 45;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
        MrmNcreateCallback = procedure CreationCb(CopiesNbTextFID);
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object printSep : XmSeparator widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_POSITION;
        XmNbottomAttachment = XmATTACH_POSITION;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopPosition = 73;
        XmNbottomPosition = 80;
        XmNtopOffset = 0;
        XmNleftOffset = 1;
        XmNrightOffset = 1;
        XmNx = 1;
        XmNy = 164;
        XmNwidth = 458;
        XmNheight = 16;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object lpOptionsTextF : XmTextField widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_POSITION;
        XmNbottomAttachment = XmATTACH_POSITION;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_POSITION;
        XmNtopPosition = 52;
        XmNbottomPosition = 72;
        XmNleftPosition = 28;
        XmNrightPosition = 98;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNx = 129;
        XmNy = 117;
        XmNwidth = 322;
        XmNheight = 45;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
        MrmNcreateCallback = procedure CreationCb(LpOptionsTextFID);
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object lpOptionsLb : XmLabel widget {
    arguments {
        arguments MyCommandStyle;
!(BX)   _XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Ip Options  :");
        XmNtopAttachment = XmATTACH_POSITION;
        XmNbottomAttachment = XmATTACH_POSITION;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_POSITION;
        XmNtopPosition = 54;
        XmNbottomPosition = 70;
        XmNleftPosition = 2;
        XmNrightPosition = 28;
        XmNtopOffset = 0;
        XmNrightOffset = 0;
        XmNx = 9;
        XmNy = 122;
        XmNwidth = 120;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object a2psOptionsLb : XmLabel widget {
    arguments {
        arguments MyCommandStyle;
!(BX)   _XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("a2ps Options  :");
        XmNtopAttachment = XmATTACH_POSITION;
        XmNbottomAttachment = XmATTACH_POSITION;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_POSITION;
        XmNtopPosition = 30;
        XmNbottomPosition = 46;
        XmNleftPosition = 2;
        XmNrightPosition = 32;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNx = 9;
        XmNy = 68;
        XmNwidth = 138;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object a2psOptionsTextF : XmTextField widget {
    arguments {
        arguments MyCommandStyle;
        XmNtopAttachment = XmATTACH_POSITION;
        XmNbottomAttachment = XmATTACH_POSITION;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_POSITION;
        XmNtopPosition = 28;
        XmNbottomPosition = 48;
        XmNleftPosition = 33;
        XmNrightPosition = 98;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNx = 152;
        XmNy = 63;
        XmNwidth = 299;
        XmNheight = 45;
    };
    controls {
    };
    callbacks {
        callbacks MyCommandStyleReasons;
        MrmNcreateCallback = procedure CreationCb(A2psOptionsTextFID);
    };
!(BX)    handlers {
!(BX)        handlers MyCommandStyleHandlers;
!(BX)    };
};

object printOKPB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
!(BX)   _XmNlabelString = compound_string("Print");
        XmNtopAttachment = XmATTACH_POSITION;
        XmNbottomAttachment = XmATTACH_POSITION;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_POSITION;
        XmNtopPosition = 80;
        XmNbottomPosition = 98;
        XmNleftPosition = 20;
        XmNrightPosition = 36;
        XmNtopOffset = 0;
        XmNrightOffset = 0;
        XmNx = 92;
        XmNy = 180;
        XmNwidth = 74;
        XmNheight = 41;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
        MrmNcreateCallback = procedure ccb_make_parent_def_button();
        XmNactivateCallback = procedure PrintCb();
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

object printCancelPB : XmPushButton widget {
    arguments {
        arguments MyPBStyle;
!(BX)   _XmNlabelString = compound_string("Cancel");
        XmNtopAttachment = XmATTACH_POSITION;
        XmNbottomAttachment = XmATTACH_POSITION;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNrightAttachment = XmATTACH_POSITION;
        XmNtopPosition = 80;
        XmNbottomPosition = 98;
        XmNleftPosition = 62;
        XmNrightPosition = 78;
        XmNtopOffset = 0;
        XmNleftOffset = 0;
        XmNx = 285;
        XmNy = 180;
        XmNwidth = 74;
        XmNheight = 41;
    };
    controls {
    };
    callbacks {
        callbacks MyPBStyleReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyPBStyleHandlers;
!(BX)    };
};

!(BX)object infoDialogShell : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNwidth = 208;
!(BX)        XmNheight = 110;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmMessageDialog infoBox;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object infoBox : XmMessageDialog widget {
    arguments {
        arguments MyInfoStyle;
!(BX)   _XmNdialogTitle = compound_string("Information ");
    };
    controls {
        Xm_Symbol managed {
            arguments {
                arguments MyInfoStyle;
            };
            callbacks {
                    callbacks MyInfoStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyInfoStyleHandlers;
!(BX)            };
        };
        Xm_Separator managed {
            arguments {
                arguments MyInfoStyle;
            };
            callbacks {
                    callbacks MyInfoStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyInfoStyleHandlers;
!(BX)            };
        };
        Xm_Message managed {
            arguments {
                arguments MyInfoStyle;
            };
            callbacks {
                    callbacks MyInfoStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyInfoStyleHandlers;
!(BX)            };
        };
        Xm_OK managed {
            arguments {
                arguments MyInfoStyle;
            };
            callbacks {
                    callbacks MyInfoStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyInfoStyleHandlers;
!(BX)            };
        };
        Xm_Cancel managed {
            arguments {
                arguments MyInfoStyle;
            };
            callbacks {
                    callbacks MyInfoStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyInfoStyleHandlers;
!(BX)            };
        };
        Xm_Help managed {
            arguments {
                arguments MyInfoStyle;
            };
            callbacks {
                    callbacks MyInfoStyleReasons;
            };
!(BX)            handlers {
!(BX)                handlers MyInfoStyleHandlers;
!(BX)            };
        };
    };
    callbacks {
        callbacks MyInfoStyleReasons;
        MrmNcreateCallback = procedure CreationCb(InfoBoxID);
    };
!(BX)    handlers {
!(BX)        handlers MyInfoStyleHandlers;
!(BX)    };
};

object menuBar : XmMenuBar widget {
    arguments {
        arguments greta_menu_style;
        XmNmenuHelpWidget = XmCascadeButton helpCascadeButton;
        XmNwidth = 642;
        XmNheight = 34;
    };
    controls {
         managed XmCascadeButton fileCascadeButton;
         managed XmCascadeButton editCascadeButton;
         managed XmCascadeButton globalCascadeButton;
         managed XmCascadeButton optionCascadeButton;
         managed XmCascadeButton helpCascadeButton;
    };
    callbacks {
        callbacks greta_menu_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object fileCascadeButton : XmCascadeButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("File");
!(BX)   _XmNmnemonic = keysym("F");
        XmNx = 5;
        XmNy = 5;
        XmNwidth = 39;
        XmNheight = 24;
    };
    controls {
         unmanaged XmPulldownMenu filePulldownMenu;
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        MrmNcreateCallback = procedure file_button_cb(0);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object filePulldownMenu : XmPulldownMenu widget {
    arguments {
        arguments greta_menu_style;
    };
    controls {
         managed XmPushButton devicePB;
         managed XmPushButton serverPB;
         managed XmPushButton resourcePB;
         managed XmSeparator separator3;
         managed XmPushButton newServPB;
         managed XmSeparator separator1;
         managed XmPushButton loadFilePB;
         managed XmSeparator separator2;
         managed XmPushButton printPB;
         managed XmPushButton exitPB;
    };
    callbacks {
        callbacks greta_menu_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object devicePB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Open device ...");
!(BX)   _XmNmnemonic = keysym("d");
!(BX)   _XmNaccelerator = "Ctrl<Key>d";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+D");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure DialogCb(DevSelFormID);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object serverPB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Open server ...");
!(BX)   _XmNmnemonic = keysym("s");
!(BX)   _XmNaccelerator = "Ctrl<Key>s";
!(BX)   _XmNacceleratorText = compound_string("Ctrl +S");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure DialogCb(ServSelFormID);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object resourcePB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Open resources ... ");
!(BX)   _XmNmnemonic = keysym("r");
!(BX)   _XmNaccelerator = "Ctrl<Key>r";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+R");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure DialogCb(ResSelFormID);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object separator3 : XmSeparator widget {
    arguments {
        arguments greta_menu_style;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object newServPB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("New Server ...");
!(BX)   _XmNmnemonic = keysym("P");
!(BX)   _XmNaccelerator = "Ctrl<Key>n";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+N");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure BxManageCB("newServForm");
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object separator1 : XmSeparator widget {
    arguments {
        arguments greta_menu_style;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object loadFilePB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Load  File ... ");
!(BX)   _XmNmnemonic = keysym("L");
!(BX)   _XmNaccelerator = "Ctrl<Key>l";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+L");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure BxManageCB("fileLoadFileSelectionBox");
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object separator2 : XmSeparator widget {
    arguments {
        arguments greta_menu_style;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object printPB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Print ...");
!(BX)   _XmNmnemonic = keysym("P");
!(BX)   _XmNaccelerator = "Ctrl<Key>p";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+P");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
       XmNactivateCallback = procedures {
                 PreparePrintCb(MainTextID);
                 DialogCb(PrintFormID);
        };
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object exitPB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Exit");
!(BX)   _XmNmnemonic = keysym("E");
!(BX)   _XmNaccelerator = "Ctrl<Key>q";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+Q");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure DialogCb(QuitMsgBoxID);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object editCascadeButton : XmCascadeButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Edit");
!(BX)   _XmNmnemonic = keysym("E");
        XmNx = 44;
        XmNy = 5;
        XmNwidth = 41;
        XmNheight = 24;
    };
    controls {
         unmanaged XmPulldownMenu editPulldownMenu;
    };
    callbacks {
        callbacks greta_menu_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object editPulldownMenu : XmPulldownMenu widget {
    arguments {
        arguments greta_menu_style;
    };
    controls {
         managed XmPushButton undoPB;
         managed XmPushButton cutPB;
         managed XmPushButton copyPB;
         managed XmPushButton pastePB;
         managed XmPushButton deletePB;
    };
    callbacks {
        callbacks greta_menu_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object undoPB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Undo");
!(BX)   _XmNmnemonic = keysym("U");
!(BX)   _XmNaccelerator = "Ctrl<Key>z";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+Z");
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure UndoCb(MainTextID);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object cutPB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Cut");
!(BX)   _XmNmnemonic = keysym("t");
!(BX)   _XmNaccelerator = "<Key>Del";
!(BX)   _XmNacceleratorText = compound_string("Del");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure CutCb(MainTextID);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object copyPB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Copy");
!(BX)   _XmNmnemonic = keysym("C");
!(BX)   _XmNaccelerator = "Ctrl<Key>c";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+C");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure CopyCb(MainTextID);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object pastePB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Paste");
!(BX)   _XmNmnemonic = keysym("P");
!(BX)   _XmNaccelerator = "Ctrl<Key>v";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+V");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure PasteCb(MainTextID);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object deletePB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Delete");
!(BX)   _XmNmnemonic = keysym("D");
!(BX)   _XmNaccelerator = "Ctrl<Key>x";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+X");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure DeleteCb(MainTextID);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object globalCascadeButton : XmCascadeButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Global");
!(BX)   _XmNmnemonic = keysym("G");
        XmNx = 85;
        XmNy = 5;
        XmNwidth = 59;
        XmNheight = 24;
    };
    controls {
         unmanaged XmPulldownMenu globalPulldownMenu;
    };
    callbacks {
        callbacks greta_menu_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object globalPulldownMenu : XmPulldownMenu widget {
    arguments {
        arguments greta_menu_style;
    };
    controls {
         managed XmPushButton infoPB;
    };
    callbacks {
        callbacks greta_menu_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object infoPB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Informations");
!(BX)   _XmNmnemonic = keysym("I");
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure DbInfoCb();
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object optionCascadeButton : XmCascadeButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("Option");
!(BX)   _XmNmnemonic = keysym("O");
        XmNx = 144;
        XmNy = 5;
        XmNwidth = 62;
        XmNheight = 24;
    };
    controls {
         unmanaged XmPulldownMenu optionPulldownMenu;
    };
    callbacks {
        callbacks greta_menu_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object optionPulldownMenu : XmPulldownMenu widget {
    arguments {
        arguments greta_menu_style;
    };
    controls {
         managed XmToggleButton servClassDisplayOptionTB;
         managed XmToggleButton embedServOptionTB;
         managed XmToggleButton devDcOptionTB;
         managed XmToggleButton devHdbOptionTB;
    };
    callbacks {
        callbacks greta_menu_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object servClassDisplayOptionTB : XmToggleButton widget {
    arguments {
        arguments greta_menu_style;
        XmNlabelString = compound_string("Servers displayed with class res" &
 "ources");
        XmNindicatorSize = 15;
        XmNvisibleWhenOff = true;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNvalueChangedCallback = procedure BoolOptionChangeCb(servdisplay_classresID);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object embedServOptionTB : XmToggleButton widget {
    arguments {
        arguments greta_menu_style;
        XmNlabelString = compound_string("Display all embedded servers in " &
 "a process");
        XmNindicatorSize = 15;
        XmNvisibleWhenOff = true;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNvalueChangedCallback = procedure BoolOptionChangeCb(servdisplay_embedded);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object devDcOptionTB : XmToggleButton widget {
    arguments {
        arguments greta_menu_style;
        XmNlabelString = compound_string("Display device data collector in" &
 "fo");
        XmNindicatorSize = 15;
        XmNvisibleWhenOff = true;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNvalueChangedCallback = procedure BoolOptionChangeCb(devdisplay_dc);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object devHdbOptionTB : XmToggleButton widget {
    arguments {
        arguments greta_menu_style;
        XmNlabelString = compound_string("Display device history database " &
 "info");
        XmNindicatorSize = 15;
        XmNvisibleWhenOff = true;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNvalueChangedCallback = procedure BoolOptionChangeCb(devdisplay_hdb);
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object helpCascadeButton : XmCascadeButton widget {
    arguments {
        arguments greta_menu_style;
        XmNlabelString = compound_string("Help");
!(BX)   _XmNmnemonic = keysym("H");
        XmNrecomputeSize = false;
        XmNx = 590;
        XmNy = 5;
        XmNwidth = 47;
        XmNheight = 24;
    };
    controls {
         unmanaged XmPulldownMenu helpPulldownMenu;
    };
    callbacks {
        callbacks greta_menu_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object helpPulldownMenu : XmPulldownMenu widget {
    arguments {
        arguments greta_menu_style;
    };
    controls {
         managed XmPushButton onVersionPB;
         managed XmPushButton onApplicationPB;
    };
    callbacks {
        callbacks greta_menu_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object onVersionPB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("On Version");
!(BX)   _XmNmnemonic = keysym("V");
!(BX)   _XmNaccelerator = "Ctrl<Key>h";
!(BX)   _XmNacceleratorText = compound_string("Ctrl+H");
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
        XmNactivateCallback = procedure OnVersionCb();
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object onApplicationPB : XmPushButton widget {
    arguments {
        arguments greta_menu_style;
!(BX)   _XmNlabelString = compound_string("On Application");
!(BX)   _XmNmnemonic = keysym("A");
        XmNrecomputeSize = false;
    };
    controls {
    };
    callbacks {
        callbacks greta_menu_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_menu_styleHandlers;
!(BX)    };
};

object mainForm : XmForm widget {
    arguments {
        arguments greta_main_style;
        XmNwidth = 642;
        XmNheight = 370;
    };
    controls {
         managed XmScrolledWindow mainScrolledWindow;
    };
    callbacks {
        callbacks greta_main_styleReasons;
    };
!(BX)    handlers {
!(BX)        handlers greta_main_styleHandlers;
!(BX)    };
};

object mainScrolledWindow : XmScrolledWindow widget {
    arguments {
        arguments MyWorkStyleNonEdit;
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopOffset = 0;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 642;
        XmNheight = 370;
    };
    controls {
         managed XmText mainText;
    };
    callbacks {
        callbacks MyWorkStyleNonEditReasons;
    };
!(BX)    handlers {
!(BX)        handlers MyWorkStyleNonEditHandlers;
!(BX)    };
};

object mainText : XmText widget {
    arguments {
        arguments MyWorkStyleNonEdit;
        XmNeditMode = XmMULTI_LINE_EDIT;
    };
    controls {
    };
    callbacks {
        callbacks MyWorkStyleNonEditReasons;
        MrmNcreateCallback = procedure CreationCb(MainTextID);
    };
!(BX)    handlers {
!(BX)        handlers MyWorkStyleNonEditHandlers;
!(BX)    };
};
end module;
