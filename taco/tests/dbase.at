AT_SETUP([connection to the database])
AT_CHECK(AT_TACO_RUN_LOCAL([db_connect]))
AT_CLEANUP

AT_SETUP([db_info command])
AT_CHECK([taco db_info | grep DEVICE], [], [[		DEVICE STATISTICS
]])
AT_CLEANUP

AT_SETUP([db_getresresoval command])
AT_CHECK(AT_TACO_RUN_LOCAL([db_getresoval CMDS/0/0/1]), [], [[cmds/0/0/1: DevOn
]])
AT_CLEANUP

AT_SETUP([db_update command])
AT_CHECK([taco db_update TEST/Inst_verify.res])
AT_CLEANUP

AT_SETUP([db_devres command])
AT_CHECK([taco db_devres test/device/1], [], 
[[test/device/1/status: Off
]])
AT_CLEANUP

AT_SETUP([db_servinfo command])
AT_CHECK([taco db_servinfo inst_verify/1], [], [[The device test/device/1 is defined for this server but is not exported
]])
AT_CLEANUP

AT_SETUP([db_update command])
AT_DATA([test.res], [[
# This file contains only resources for the tests
test/test/device:	test/device/2 \
			test/device/3 \
			test/device/4 
test/device/2/res1:	"resource 1"
test/device/2/res2:	2
test/device/2/res3:	3.1
test/device/2/res4:	1,1,1
test/device/2/res5:	"A","B","C"
]])
AT_CHECK([RES_BASE_DIR=`pwd` taco db_update test.res])
AT_CLEANUP

AT_SETUP([db_update command failes])
AT_DATA([test.res], [[
# This file contains only resources for the tests
test/test/devices:	test/device/2 
test/device/2/res1:	"resource 1"
]])
AT_CHECK([RES_BASE_DIR=`pwd` taco db_update test.res 2>/dev/null], [255])  
AT_CLEANUP

AT_SETUP([db_read command])
AT_XFAIL_IF([test x"$python" != x"yes"])
AT_CHECK([taco db_read names | sort], [],
[[NAMES: agpspp|1|1|: test/agps/1|not_exp|0|0|unknown|unknown|0|unknown|
NAMES: inst_verify|1|1|: test/device/1|not_exp|0|0|unknown|unknown|0|unknown|
NAMES: python|test|1|: test/python/test1|not_exp|0|0|unknown|unknown|0|unknown|
NAMES: python|test|2|: test/python/test2|not_exp|0|0|unknown|unknown|0|unknown|
NAMES: test|test|1|: test/device/2|not_exp|0|0|unknown|unknown|0|unknown|
NAMES: test|test|2|: test/device/3|not_exp|0|0|unknown|unknown|0|unknown|
NAMES: test|test|3|: test/device/4|not_exp|0|0|unknown|unknown|0|unknown|
]])
AT_CLEANUP

AT_SETUP([db_getresource function])
AT_CHECK(AT_TACO_RUN_LOCAL([db_resget test/device/2/res1]), [], [[resource 1
]])
AT_CLEANUP

AT_SETUP([db_putresource function])
AT_CHECK([AT_TACO_RUN_LOCAL([db_resput test/device/3/res1 TEST])
AT_TACO_RUN_LOCAL([db_resget test/device/3/res1])
AT_TACO_RUN_LOCAL([db_resput test/device/3/res1 TEST TEST2 TEST3])
AT_TACO_RUN_LOCAL([db_resget test/device/3/res1])], [], [[TEST
TEST,TEST2,TEST3
]])
AT_CLEANUP

AT_SETUP([db_delresource function])
AT_CHECK([taco db_resdel test/device/3/res1], [])
AT_CLEANUP

AT_SETUP([check existing resource domains])
AT_CHECK(AT_TACO_RUN_LOCAL([db_resdomain]), [], [[class
cmds
error
events
sec
sys
test
]])
AT_CLEANUP

AT_SETUP([check existing resource families])
AT_CHECK(AT_TACO_RUN_LOCAL([db_resfamily test]), [], [[device
]])
AT_CLEANUP

AT_SETUP([check existing resource members])
AT_CHECK(AT_TACO_RUN_LOCAL([db_resmember test device]), [], [[1
2
]])
AT_CLEANUP

AT_SETUP([check resource value])
AT_CHECK(AT_TACO_RUN_LOCAL([db_getresoval class/inst_verify/default/config]), [], [[class/inst_verify/default/config: 10
]])
AT_CLEANUP 

AT_SETUP([check existing device domains])
AT_CHECK(AT_TACO_RUN_LOCAL([db_devdomain]), [], [[test
]])
AT_CLEANUP

AT_SETUP([check existing device families])
AT_CHECK(AT_TACO_RUN_LOCAL([db_devfamily test]), [], [[agps
device
python
]])
AT_CLEANUP

AT_SETUP([check existing device members])
AT_CHECK(AT_TACO_RUN_LOCAL([db_devmember test device]), [], [[1
2
]])
AT_CLEANUP


AT_SETUP([check db_export and db_servunreg])
AT_DATA([test_server.res], [[
test_server/1/device:	test/a/1
]])
AT_CHECK([
RES_BASE_DIR=`pwd` taco db_update test_server.res
AT_TACO_RUN_LOCAL([db_devperslist test_server])
AT_TACO_RUN_LOCAL([test_server 1 &])
sleep 5
AT_TACO_RUN_LOCAL([off test_server >>log])
sleep 1
AT_TACO_RUN_LOCAL([test_server 1 &])
sleep 5
AT_TACO_RUN_LOCAL([off test_server >>log])
], [], [[1
]])
AT_CLEANUP

