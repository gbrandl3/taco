dnl Process this file with autom4te to create testsuite. -*- Autotest -*-
dnl
dnl Test suite for TACO.
dnl Copyright (C) 2003-2014 Jens Kr√ºger <jens.krueger@frm2.tum.de>
dnl
dnl This program is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU General Public License as published by
dnl the Free Software Foundation; either version 2, or (at your option)
dnl any later version.
dnl
dnl This program is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU General Public License for more details.
dnl
dnl You should have received a copy of the GNU General Public License
dnl along with this program; if not, write to the Free Software
dnl Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
dnl 02111-1307, USA.

m4_define(AT_TACO_DEVICE_SUITE, [
AT_SETUP([Start Inst_verify device server])
AT_SKIP_IF([test x$1 != xyes])
AT_CHECK([taco Inst_verify 1 -m -d
sleep 1
printf "%d\n" `ps x | grep Inst_verify | grep -v grep | wc -l`], [],
[[1
]])
AT_CLEANUP

AT_SETUP([ping to the device test/device1/1])
AT_SKIP_IF([test x$1 != xyes])
AT_CHECK([taco dev_ping -c 3 test/device/1 | grep status | cut -d' ' -f 4 | uniq], [],
[[status=OK
]])
AT_CLEANUP

AT_SETUP([cmd_query command to test/device/1])
AT_SKIP_IF([test x$1 != xyes])
AT_CHECK(AT_TACO_RUN_LOCAL([dev_cmdquery test/device/1]), [],
[[        12             DevReadValue         0         8
        11              DevSetValue         4         0
         4                 DevState         0         2
         8                DevStatus         0         6]]
)
AT_CLEANUP

AT_SETUP([Send commands to test/device/1])
AT_SKIP_IF([test x$1 != xyes])
AT_DATA([instverify], [[3
0
]])
echo "NETHOST = " $NETHOST >> instverify
AT_CHECK([taco Inst_verify_menu test/device/1 2>/dev/null < instverify], [1], [[
test_menu for test/device/1 (Inst_verifyClass)
____________________________________
1.State 	2.Status 
3.ReadValue  	4.SetValue 

Select one commands (0 to quit) : ? 
Set  value = 0.0
Read value = 0.0
State      = 2

test_menu for test/device/1 (Inst_verifyClass)
____________________________________
1.State 	2.Status 
3.ReadValue  	4.SetValue 

Select one commands (0 to quit) : ? 
]])
AT_CLEANUP

AT_SETUP([Gets device information])
AT_SKIP_IF([test x$1 != xyes])
AT_CHECK([taco db_devinfo test/device/1 | egrep "(belongs|monitored)" ], [], 
[[Device test/device/1 belongs to class : Inst_verifyClass
It is monitored by the server : inst_verify/1 version 4
]])
AT_CLEANUP

AT_SETUP([Test device information of not existing device])
AT_SKIP_IF([test x$1 != xyes])
AT_CHECK([taco db_devinfo test/device/x], [255],[], 
[[The device test/device/x is not defined in the database
]])
AT_CLEANUP

AT_SETUP([Start AGPSpp device server ])
AT_SKIP_IF([test x$1 != xyes])
AT_CHECK([taco AGPSpp 1 -m -d 
sleep 1
printf "%d\n" `ps x | grep AGPSpp | grep -v grep | wc -l`], [],
[[1
]])
AT_CLEANUP

AT_SETUP([Send commands to the AGPSpp])
AT_SKIP_IF([test x$1 != xyes])
AT_DATA([agps],
[[4
0
]])
AT_CHECK([taco ps_menu test/agps/1 2>/dev/null < agps], [0], 
[[dev_import(test/agps/1) returned 0 (error=0)
Select one of the following commands :

0. Quit
1. On          2. Off          3. State
4. Status      5. Set          6. Read
7. Update      8. Local        9. Error
10.Resett
cmd ?
DevStatus dev_putget() returned 0
  On
Select one of the following commands :

0. Quit
1. On          2. Off          3. State
4. Status      5. Set          6. Read
7. Update      8. Local        9. Error
10.Resett
cmd ?]]) 
AT_CLEANUP

AT_SETUP([get exported devices])
AT_SKIP_IF([test x$1 != xyes])
AT_CHECK(AT_TACO_RUN_LOCAL([db_getdevexp]), [], [[test/agps/1
test/device/1
]]) 
AT_CLEANUP

AT_SETUP([import a device from server])
AT_SKIP_IF([test x$1 != xyes])
AT_CHECK(AT_TACO_RUN_LOCAL([dev_import test/device/1]), [], [[test/device/1
Inst_verifyClass
DevType_Default
]])
AT_CLEANUP

AT_SETUP([check the RPC connection parameters])
AT_SKIP_IF([test x$1 != xyes])
AT_CHECK(AT_TACO_RUN_LOCAL([dev_conparams test/device/1]), [], [[3
1.5
]])
AT_CLEANUP

AT_SETUP([Stop the Inst_verify and AGPSpp device servers])
AT_SKIP_IF([test x$1 != xyes])
AT_CHECK([AT_TACO_RUN_TEST([off Inst_verify | grep -v Killing])
AT_TACO_RUN_TEST([off AGPSpp | grep -v Killing])
sleep 4
printf "%d\n" `ps x | grep Inst_verify | grep -v grep | wc -l`
printf "%d\n" `ps x | grep AGPSpp | grep -v grep | wc -l`
],
[0],
[[There are 1 Inst_verify processes:

There are 1 AGPSpp processes:

0
0
]])
AT_CLEANUP

AT_SETUP([Test the command and event lists of a device])
AT_SKIP_IF([test x$1 != xyes])
AT_DATA([test_server.res], [[
# This file contains only resources for the tests
test_server/1/device:	test/a/1 \
			test/longfamily/long

test/a/1/type: TestDevice
test/longfamily/long/type: TestDevice2
test/longfamily/long/longresource: 25
]])
AT_CHECK([
RES_BASE_DIR=`pwd` taco db_update test_server.res
AT_TACO_RUN_LOCAL([test_server 1 -m -d])
sleep 5
AT_TACO_RUN_LOCAL([test_connect test/a/1])
AT_TACO_RUN_TEST([off test_server >>log 2>&1])], [], [Set protocol to TCP
Query commands
    4228120577       0       9                        "SendByteArray"
             1       0       0                        "DevOn"
             2       0       0                        "DevOff"
             3       0       0                        "DevReset"
             4       0       2                        "DevState"
             8       0       6                        "DevStatus"
Query events
    4228120578           3                        "HeartBeat"
])
AT_CLEANUP
])
