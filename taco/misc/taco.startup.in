#!/bin/sh -v
# Toolkit for building distributed control systems or any other distributed system.
#
# Copyright (c) 1990-2005 ESRF, www.esrf.fr
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
# taco.startup : starts the TACO manager + database, if database does not
#		 exist it fills the database with the resource files using
#		 the db_fillup utility
#

environ()
{
# setup TACO environment variables
	prefix=${DSHOME:-@prefix@}
	exec_prefix=@exec_prefix@
	sysconfdir=@sysconfdir@
	datadir=@datadir@
	datarootdir=@datarootdir@
	templatedir=@templatedir@
	if test -f ${sysconfdir}/tacoenv.sh ; then
		. ${sysconfdir}/tacoenv.sh
	else
		. ${templatedir}/tacoenv.sh
	fi

	echo "You are working on host $HOSTNAME machine -"
	echo ""
	echo "DSHOME       = $DSHOME"
	echo "DBM_DIR      = $DBM_DIR"
	echo "RES_BASE_DIR = $RES_BASE_DIR"
	echo "DBTABLES     = $DBTABLES"
	echo ""
	echo "PATH         = $PATH"
}

dbase()
{
  	# fill the database if there are no
  	# database files present (names)

	if test "${TACO_DATABASE:-dbm}" = "dbm" ; then
		new=`ls -l $DBM_DIR/* 2>/dev/null | awk '{print $5;}' | sort | uniq | wc -l`
		if [ $new -eq 1 ] ;  then
	      		echo "calling db_fillup to fill up database"
			sleep 5
    			LD_LIBRARY_PATH=${libdir}:${LD_LIBRARY_PATH} ${bindir}/db_fillup2
	      		echo "dbm database fill up done"
	  	fi
	elif test x"${TACO_DATABASE}" = x"sqlite3" ; then
		new=`sqlite3 ${DBM_DIR}/tango 'select count(*) from property_device'` 
		if [ $new -eq 0 ] ; then
			echo "calling db_fillup to fill up database"
			sleep 10
    			LD_LIBRARY_PATH=${libdir}:${LD_LIBRARY_PATH} ${bindir}/db_fillup2
			echo "sqlite3 database fill up done"
		fi
	elif test "x${TACO_DATABASE}" = "xmysql" ; then
		new=`echo 'select count(*) from property_device;' | mysql -u $MYSQL_USER -D tango | grep -v count`
		if [ $new -eq 0 ] ; then
			echo "calling db_fillup to fill up database"
			sleep 5
    			LD_LIBRARY_PATH=${libdir}:${LD_LIBRARY_PATH} ${bindir}/db_fillup2
			echo "mysql database fill up done"
		fi
	fi
}

manager()
{
# first kill any Manager running and make sure program no. 100 is free
	@sbindir@/off Manager
	@sbindir@/unreg 100

	if test "x$TACO_LOGGING" = "xyes" ; then
		taco_manager_flags="-log"
		if test ! -d $LOGPATH ; then
			mkdir -p $LOGPATH
		fi
	fi
	if test "x$TACO_SECURITY" = "xyes" ; then
		taco_manager_flags="$taco_manager_flags -security"
	fi		
	taco_manager_flags="$taco_manager_flags -${TACO_DATABASE:-dbm}"

# now start the Manager 
    	echo "starting the Manager ..."
    	LD_LIBRARY_PATH=${libdir}:${LD_LIBRARY_PATH} ${sbindir}/Manager $taco_manager_flags 
    	echo "Manager started"
}

#
#  Here is the heart of the script:
#
environ
manager
dbase
