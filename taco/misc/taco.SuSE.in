#! /bin/sh
# Toolkit for building distributed control systems or any other distributed system.
#
# Copyright (c) 2003-2005 Jens Krüger <jkrueger1@users.sf.net>
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
# This script is SuSE specific
### BEGIN INIT INFO
# Provides: taco
# Required-Start: $network $portmap
# Required-Stop:
# Default-Start: 3 5
# Default-Stop: 0 1 2 6
# Description: Start the TACO system services.
### END INIT INFO

. /etc/rc.status
rc_reset

usage="Usage: $0 {start|stop|status|restart|new}"

# Include TACO environment file
prefix=${DSHOME:-@prefix@}
exec_prefix=@exec_prefix@
taco_env_file="@sysconfdir@/tacoenv.sh"
if test ! -r "$taco_env_file" ; then
	echo "error: TACO environment file '$taco_env_file' is missing"
	exit 6
fi
. "$taco_env_file" 

# Check for TACO manager executable
taco_manager="${TACO_PATH}/Manager"
if test ! -x $taco_manager ; then
	echo "error: TACO manager '$taco_manager' is not installed"
	exit 5
fi

case $1 in
	start)
		if test "x$TACO_LOGGING" = xyes ; then 
			log="-log"
		fi
		if test "x$TACO_SECURITY" = xyes ; then
			sec_text="in secure mode"
			security="-security"
		fi
		dbase="-${TACO_DATABASE:-dbm}"
		echo -n "Starting TACO services $sec_text"
		startproc -t 5 -s -q "$taco_manager" $dbase $log $security
		rc_status -v
		if [ ${TACO_DATABASE:-dbm} = dbm ] ; then
			new=`ls -l ${DBM_DIR}/* 2>/dev/null | awk '{print $5;}' | sort | uniq | wc -l`
			if [ $new -le 1 ] ;  then
				echo "Initialization of the database:"
				if db_fillup2 ; then
					rc_status -v
				else
					rc_status -v
					rc_exit
				fi
			fi
		elif test x"${TACO_DATABASE}" = x"sqlite3" ; then
			new=`sqlite3 ${DBM_DIR}/tango 'select count(*) from property_device'`
			if [ $new -eq 0 ] ; then
				echo "Initialization of the database:"
				if db_fillup2 ; then 
					rc_status -v
				else
					rc_status -v
					rc_exit
				fi
			fi
		fi
		;;
	stop)
		echo -n "Shutting down TACO services"
		killproc "$taco_manager"
		rc_status -v
		;;
	restart)
		$0 stop
		$0 start
		rc_status
		;;
	status)
		echo -n "Checking for TACO services"
		checkproc "$taco_manager"
		rc_status -v
		;;
	new)
		if [ ${TACO_DATABASE:-dbm} = dbm ] ; then
			echo -n "Do you really want to delete the complete TACO database (not the resource files)? (yes/no): "
			read
			if test "x$REPLY" = xyes ; then
				rm -f "$DBM_DIR"/*
				$0 restart
				rc_status
			else
				rc_failed
			fi
		fi
		;;
	*)
		echo "$usage"
		rc_failed
		;;
esac
rc_exit
