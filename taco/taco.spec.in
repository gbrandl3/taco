Summary: TACO control system.
Name: @PACKAGE@
Version: @VERSION@
Release: @RPM_RELEASE@
Copyright: GPL
Group: Utilities/TACO
Source: @PACKAGE@-@VERSION@.tar.gz 
Prefix: @prefix@
Vendor: FRMII, TU München, FRG
Distribution:@DISTRIBUTION@
Requires: gdbm
Provides: taco
Url: http://www.sourceforge.net/projects/taco

%description
TACO is an object oriented control system originally developed at the European Synchrotron Radiation Facility to control accelerators 
and beamlines and data acquisition systems. 

At the ESRF (www.esrf.fr) TACO is used to control three accelerators - linear accelerator , booster synchrotron and storage ring, and 
over 30 beamlines. 
TACO is being used for instrument control for the new  neutron source FRM-II (www.frm2.tum.de) in Garching-Munich. 
TACO has been applied to telescope control at the 26m radio telescope at the Hartebeesthoek Radio Astronomy Observatory (www.hartroa.ac.za). 

TACO is very scalable and can be used for simple single device laboratory like setups with only a few devices or for a big installation 
comprising thousands of devices. TACO is a cheap and simple solution for doing distributed home automation. TACO is available free of 
charge without warranties. 

TACO is object oriented because it treats ALL (physical and logical) control points in a control system as objects in a distributed 
environment. All actions are implement in classes. New classes can be constructed out of existing classes in a hierarchical manner 
thereby ensuring a high-level of software reuse. Classes can be written in C++, in C (using a methodology called Objects in C), in 
Python or in LabView (using G). 

TACO has been designed to be portable and runs on a large number of platforms (e.g. Linux, Solaris, BSD, Mac OS X, HP-UX, Win32, OS9). 

%prep
%setup -n @PACKAGE@-@VERSION@

%build
export DSHOME=@prefix@
./configure --enable-fast-install=yes --enable-greta --enable-xdevmenu --with-motif=/usr/X11R6/LessTif/Motif1.2 "--prefix=$DSHOME"
make 

%install
export DSHOME=@prefix@
make install-strip
make "DESTDIR=$PWD/tmp-install-dir" install
find tmp-install-dir -regex ".*$DSHOME/lib/.*" -a -not -type d | sed -e 's/^tmp-install-dir//' > @PACKAGE@.txt
find tmp-install-dir -regex ".*$DSHOME/include/.*" -a -not -type d | sed -e 's/^tmp-install-dir//' >> @PACKAGE@.txt

%clean
make uninstall
if test "$PWD" = "${PWD%/*}/@PACKAGE@-@VERSION@" ; then
	rm -rf "$PWD"
else
	echo "error: unexpected build directory: $PWD" ; exit 1
fi
       
%post
export DSHOME="$RPM_INSTALL_PREFIX"
mkdir -p "$DSHOME/dbase/dbm"
mkdir -p "$DSHOME/dbase/res/TEST"

# Adjust some paths
if test "x$DSHOME" != x@prefix@ ; then
	cd "$DSHOME"
	for i in etc/.taco.csh \
		etc/.taco_env \
		etc/taco.shutdown \
		etc/taco.startup \
		etc/taco.startup.sec \
		templates/taco/tacoenv.sh
	do
		mv $i tmp.sed
		sed -e "s%@prefix@%$DSHOME%" tmp.sed > $i
	done
	for i in lib/@taco_install_path@/libTACOMySQL.la \
		lib/@taco_install_path@/libTACOndbm.la \
		lib/@taco_install_path@/libascapi.la \
		lib/@taco_install_path@/libdataport.la \
		lib/@taco_install_path@/libdbapi.la \
		lib/@taco_install_path@/libdcapi.la \
		lib/@taco_install_path@/libdcmem.la \
		lib/@taco_install_path@/libdsapi.la \
		lib/@taco_install_path@/libdsapig++.la \
		lib/@taco_install_path@/libdsxdr.la \
		lib/@taco_install_path@/libdsxdr_all.la \
		lib/@taco_install_path@/libtacoapi.la \
		lib/@taco_install_path@/libtacoapig++.la \
		lib/@taco_install_path@/libtcapi.la \
		templates/taco/taco
	do
		mv $i tmp.sed
		sed -e "s%@prefix@%$DSHOME%" tmp.sed > $i
		chmod 0755 $i
	done
	rm -f tmp.sed
fi

# Update the linker cache
cd "$DSHOME/lib/@taco_install_path@
/sbin/ldconfig -n

# Install runlevel control script
test -f /etc/tacoenv.sh || install -m 0644 "$DSHOME/templates/taco/tacoenv.sh" /etc

# Install TACO environment file
if test -d /etc/init.d ; then
	initdir=/etc/init.d
elif test -d /sbin/init.d ; then
	initdir=/sbin/init.d
elif test -d /etc/rc.d ; then
	initdir=/etc/rc.d
else
	echo "error: cannot find init directory"
	exit 1
fi
if ! test -f "$initdir/taco" ; then
	taco_rc_file="$DSHOME/templates/taco/taco"
	if test -f /etc/SuSE-release ; then
		case `grep VERSION /etc/SuSE-release` in
			'VERSION = 7.'*)
				sed -e 's/\$portmap/portmap/' "$taco_rc_file" > "$taco_rc_file.sed"
				mv "$taco_rc_file.sed" "$taco_rc_file"
				chmod 0755 "$taco_rc_file"
				;;
		esac
	fi
	install "$taco_rc_file" "$initdir"
fi
echo "The automatic installation is complete."
echo "You should read the file '$DSHOME/doc/index.html' now."

%preun
# Delete TACO services startup at the final erase
if test "x$1" = x0 ; then
	if test -e /sbin/chkconfig ; then
		/sbin/chkconfig --del taco
	elif test -e /sbin/insserv ; then
		/sbin/insserv -r taco
	else
		echo "error: cannot find program to remove runlevel control script"
		exit 1
	fi
fi

%files -f @PACKAGE@.txt
%defattr(-,root,root)
@prefix@/templates/taco/taco
%config(noreplace) @prefix@/sbin/taco.shutdown
%config(noreplace) @prefix@/sbin/taco.startup
%config(noreplace) @prefix@/dbase/res/SEC/sec_auth.res
%config @prefix@/dbase/res/CMDS/dev_cmds.res
%config @prefix@/dbase/res/ERROR/dev_errors.res
%config @prefix@/dbase/res/ERROR/db_errors.res
%config @prefix@/etc/tacoenv.sh
%config @prefix@/etc/tacoenv.csh
# %doc INSTALL doc/TACO.pdf doc/README doc/index.html
@prefix@/bin/db_fillup
@prefix@/bin/db_update
@prefix@/bin/db_read
@prefix@/bin/db_info
@prefix@/bin/db_initcache
@prefix@/bin/db_devinfo
@prefix@/bin/db_devdel
@prefix@/bin/db_servdel
@prefix@/bin/db_servinfo
@prefix@/bin/db_servunreg
@prefix@/bin/db_devres
@prefix@/bin/db_resdel
@prefix@/sbin/Manager
@prefix@/sbin/unreg
@prefix@/sbin/MessageServer
@prefix@/sbin/dcwr_alo
@prefix@/sbin/dcrd_alo
@prefix@/sbin/dbm_server

%package x-apps
Summary: TACO control system X11 applications.
Group: Utilities/TACO/X11
Prefix: @prefix@
Provides: taco-x-apps

%description x-apps

%files x-apps
%defattr(-,root,root)
@prefix@/bin/greta
@prefix@/bin/xdevmenu
@prefix@/sbin/S_Alarm
@appdefaultdir@/GReta
@appdefaultdir@/XDevmenu

%changelog
